TF: >> terraform init -no-color -input=false -migrate-state
TF: Initializing the backend...
TF: Successfully configured the backend "s3"! Terraform will automatically
TF: use this backend unless the backend configuration changes.
TF: Initializing provider plugins...
TF: - Finding latest version of hashicorp/aws...
TF: - Installing hashicorp/aws v3.63.0...
TF: - Installed hashicorp/aws v3.63.0 (signed by HashiCorp)
TF: Terraform has created a lock file .terraform.lock.hcl to record the provider
TF: selections it made above. Include this file in your version control repository
TF: so that Terraform can guarantee to make the same selections by default when
TF: you run "terraform init" in the future.
TF: Terraform has been successfully initialized!
TF: >> terraform plan -no-color -input=false -out=tfplan -compact-warnings -destroy
TF: module.functions.aws_iam_role_policy.lambda: Refreshing state... [id=project-dev-4byktiy:project-dev-4byktiy]
TF: module.api.module.http_api.aws_cloudwatch_log_group.http_access_logs: Refreshing state... [id=project-dev-http-access-logs-4byktiy]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_access_logs: Refreshing state... [id=project-dev-ws-access-logs-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/public/GET"]: Refreshing state... [id=bpscsbm]
TF: module.api.module.ws_api[0].aws_iam_role.ws_handler: Refreshing state... [id=project-dev-ws-handler-4byktiy]
TF: module.api.module.ws_api[0].aws_lambda_function.ws_forwarder: Refreshing state... [id=project-dev-ws-forwarder-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_deployment.ws: Refreshing state... [id=zvo2lr]
TF: module.functions.aws_iam_instance_profile.lambda: Refreshing state... [id=project-dev-4byktiy]
TF: module.api.module.ws_api[0].aws_lambda_function.ws_handler: Refreshing state... [id=project-dev-ws-handler-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_stage.ws_default: Refreshing state... [id=$default]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/public/GET"]: Refreshing state... [id=0b8nt7k]
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/ping/POST"]: Refreshing state... [id=yxjcd6g]
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/public/GET"]: Refreshing state... [id=yohyk56]
TF: module.api.aws_api_gateway_account.api: Refreshing state... [id=api-gateway-account]
TF: module.api.module.ws_api[0].aws_iam_role.ws_forwarder: Refreshing state... [id=project-dev-ws-forwarder-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/public/GET"]: Refreshing state... [id=odut994]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler_connect: Refreshing state... [id=4pwp426]
TF: module.api.aws_iam_role.cloudwatch: Refreshing state... [id=project-dev-api-cloudwatch-4byktiy]
TF: module.functions.aws_lambda_function.functions["ping"]: Refreshing state... [id=project-dev-ping-4byktiy]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_forwarder_log_group: Refreshing state... [id=/aws/lambda/project-dev-ws-forwarder-4byktiy]
TF: module.functions.aws_iam_role.lambda: Refreshing state... [id=project-dev-4byktiy]
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_forwarder: Refreshing state... [id=project-dev-ws-forwarder-4byktiy:project-dev-ws-forwarder-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_integration.ws_handler: Refreshing state... [id=nm62ie5]
TF: module.public_site.aws_s3_bucket.public: Refreshing state... [id=mantil-public-project-dev-4byktiy]
TF: module.api.module.ws_api[0].aws_dynamodb_table.table: Refreshing state... [id=project-dev-ws-connections-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$disconnect"]: Refreshing state... [id=8k637uo]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$default"]: Refreshing state... [id=ceqk23a]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_handler_log_group: Refreshing state... [id=/aws/lambda/project-dev-ws-handler-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_stage.http_default: Refreshing state... [id=$default]
TF: module.api.module.http_api.aws_lambda_permission.api_gateway_invoke["/ping/POST"]: Refreshing state... [id=terraform-20211103123542482500000001]
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/ping/POST"]: Refreshing state... [id=o9axkru]
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_handler: Refreshing state... [id=project-dev-ws-handler-4byktiy:project-dev-ws-handler-4byktiy]
TF: module.api.aws_iam_role_policy.cloudwatch: Refreshing state... [id=project-dev-api-cloudwatch-4byktiy:project-dev-api-cloudwatch-4byktiy]
TF: module.api.module.ws_api[0].aws_lambda_permission.ws_handler_api_gateway_invoke: Refreshing state... [id=AllowAPIGatewayInvoke]
TF: module.public_site.aws_s3_bucket_policy.public_read: Refreshing state... [id=mantil-public-project-dev-4byktiy]
TF: module.functions.aws_cloudwatch_log_group.functions_log_groups["ping"]: Refreshing state... [id=/aws/lambda/project-dev-ping-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_deployment.http: Refreshing state... [id=w60gbl]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/ping/POST"]: Refreshing state... [id=r6n66x0]
TF: module.api.module.ws_api[0].aws_apigatewayv2_api.ws: Refreshing state... [id=rjj99anpxg]
TF: module.api.module.http_api.aws_apigatewayv2_api.http: Refreshing state... [id=y3z3mojmrk]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/ping/POST"]: Refreshing state... [id=tjgijo4]
TF: Note: Objects have changed outside of Terraform
TF: Terraform detected the following changes made outside of Terraform since the
TF: last "terraform apply":
TF:   # module.functions.aws_cloudwatch_log_group.functions_log_groups["ping"] has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:         id                = "/aws/lambda/project-dev-ping-4byktiy"
TF:         name              = "/aws/lambda/project-dev-ping-4byktiy"
TF:       + tags              = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.functions.aws_iam_instance_profile.lambda has been changed
TF:   ~ resource "aws_iam_instance_profile" "lambda" {
TF:         id          = "project-dev-4byktiy"
TF:         name        = "project-dev-4byktiy"
TF:       + tags        = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (6 unchanged attributes hidden)
TF:     }
TF:   # module.functions.aws_iam_role.lambda has been changed
TF:   ~ resource "aws_iam_role" "lambda" {
TF:         id                    = "project-dev-4byktiy"
TF:         name                  = "project-dev-4byktiy"
TF:       + tags                  = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "project-dev-4byktiy"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.functions.aws_lambda_function.functions["ping"] has been changed
TF:   ~ resource "aws_lambda_function" "functions" {
TF:         id                             = "project-dev-ping-4byktiy"
TF:       ~ last_modified                  = "2021-11-03T12:35:37.185+0000" -> "2021-11-03T12:35:42.739+0000"
TF:       + tags                           = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (20 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.public_site.aws_s3_bucket.public has been changed
TF:   ~ resource "aws_s3_bucket" "public" {
TF:         id                          = "mantil-public-project-dev-4byktiy"
TF:       + tags                        = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (12 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.public_site.aws_s3_bucket_policy.public_read has been changed
TF:   ~ resource "aws_s3_bucket_policy" "public_read" {
TF:         id     = "mantil-public-project-dev-4byktiy"
TF:       ~ policy = jsonencode( # whitespace changes
TF:             {
TF:                 Statement = [
TF:                     {
TF:                         Action    = "s3:GetObject"
TF:                         Effect    = "Allow"
TF:                         Principal = "*"
TF:                         Resource  = [
TF:                             "arn:aws:s3:::mantil-public-project-dev-4byktiy",
TF:                             "arn:aws:s3:::mantil-public-project-dev-4byktiy/*",
TF:                         ]
TF:                         Sid       = "PublicReadGetObject"
TF:                     },
TF:                 ]
TF:                 Version   = "2012-10-17"
TF:             }
TF:         )
TF:         # (1 unchanged attribute hidden)
TF:     }
TF:   # module.api.aws_iam_role.cloudwatch has been changed
TF:   ~ resource "aws_iam_role" "cloudwatch" {
TF:         id                    = "project-dev-api-cloudwatch-4byktiy"
TF:         name                  = "project-dev-api-cloudwatch-4byktiy"
TF:       + tags                  = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "project-dev-api-cloudwatch-4byktiy"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = [
TF:                               + "logs:CreateLogGroup",
TF:                               + "logs:CreateLogStream",
TF:                               + "logs:DescribeLogGroups",
TF:                               + "logs:DescribeLogStreams",
TF:                               + "logs:PutLogEvents",
TF:                               + "logs:GetLogEvents",
TF:                               + "logs:FilterLogEvents",
TF:                             ]
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http["/public/GET"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "0b8nt7k"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http["/ping/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "r6n66x0"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http["/ping/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "o9axkru"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http["/public/GET"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "odut994"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_api.http has been changed
TF:   ~ resource "aws_apigatewayv2_api" "http" {
TF:         id                           = "y3z3mojmrk"
TF:         name                         = "project-dev-http-4byktiy"
TF:       + tags                         = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (8 unchanged attributes hidden)
TF:       ~ cors_configuration {
TF:           + allow_headers     = []
TF:           + allow_methods     = []
TF:           + expose_headers    = []
TF:             # (3 unchanged attributes hidden)
TF:         }
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/ping/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "yxjcd6g"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/public/GET"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "yohyk56"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_cloudwatch_log_group.http_access_logs has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "http_access_logs" {
TF:         id                = "project-dev-http-access-logs-4byktiy"
TF:         name              = "project-dev-http-access-logs-4byktiy"
TF:       + tags              = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_stage.http_default has been changed
TF:   ~ resource "aws_apigatewayv2_stage" "http_default" {
TF:         id              = "$default"
TF:         name            = "$default"
TF:       + stage_variables = {}
TF:       + tags            = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (7 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/ping/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "tjgijo4"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/public/GET"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "bpscsbm"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$default"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler" {
TF:       + authorization_scopes = []
TF:         id                   = "ceqk23a"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$disconnect"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler" {
TF:       + authorization_scopes = []
TF:         id                   = "8k637uo"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_api.ws has been changed
TF:   ~ resource "aws_apigatewayv2_api" "ws" {
TF:         id                           = "rjj99anpxg"
TF:         name                         = "project-dev-ws-4byktiy"
TF:       + tags                         = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler_connect has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler_connect" {
TF:       + authorization_scopes = []
TF:         id                   = "4pwp426"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_lambda_function.ws_handler has been changed
TF:   ~ resource "aws_lambda_function" "ws_handler" {
TF:         id                             = "project-dev-ws-handler-4byktiy"
TF:       ~ last_modified                  = "2021-11-03T12:35:45.617+0000" -> "2021-11-03T12:35:52.916+0000"
TF:       + layers                         = []
TF:       + tags                           = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (19 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_forwarder_log_group has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "ws_forwarder_log_group" {
TF:         id                = "/aws/lambda/project-dev-ws-forwarder-4byktiy"
TF:         name              = "/aws/lambda/project-dev-ws-forwarder-4byktiy"
TF:       + tags              = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role.ws_forwarder has been changed
TF:   ~ resource "aws_iam_role" "ws_forwarder" {
TF:         id                    = "project-dev-ws-forwarder-4byktiy"
TF:         name                  = "project-dev-ws-forwarder-4byktiy"
TF:       + tags                  = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "project-dev-ws-forwarder-4byktiy"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_access_logs has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "ws_access_logs" {
TF:         id                = "project-dev-ws-access-logs-4byktiy"
TF:         name              = "project-dev-ws-access-logs-4byktiy"
TF:       + tags              = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_handler_log_group has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "ws_handler_log_group" {
TF:         id                = "/aws/lambda/project-dev-ws-handler-4byktiy"
TF:         name              = "/aws/lambda/project-dev-ws-handler-4byktiy"
TF:       + tags              = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role.ws_handler has been changed
TF:   ~ resource "aws_iam_role" "ws_handler" {
TF:         id                    = "project-dev-ws-handler-4byktiy"
TF:         name                  = "project-dev-ws-handler-4byktiy"
TF:       + tags                  = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "project-dev-ws-handler-4byktiy"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_stage.ws_default has been changed
TF:   ~ resource "aws_apigatewayv2_stage" "ws_default" {
TF:         id              = "$default"
TF:         name            = "$default"
TF:       + stage_variables = {}
TF:       + tags            = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (7 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_dynamodb_table.table has been changed
TF:   ~ resource "aws_dynamodb_table" "table" {
TF:         id             = "project-dev-ws-connections-4byktiy"
TF:         name           = "project-dev-ws-connections-4byktiy"
TF:       + tags           = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (8 unchanged attributes hidden)
TF:         # (4 unchanged blocks hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_lambda_function.ws_forwarder has been changed
TF:   ~ resource "aws_lambda_function" "ws_forwarder" {
TF:         id                             = "project-dev-ws-forwarder-4byktiy"
TF:       + layers                         = []
TF:       + tags                           = {
TF:           + "MANTIL_KEY"       = "4byktiy"
TF:           + "MANTIL_PROJECT"   = "project"
TF:           + "MANTIL_STAGE"     = "dev"
TF:           + "MANTIL_WORKSPACE" = "ivlasic"
TF:         }
TF:         # (20 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_integration.ws_handler has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "ws_handler" {
TF:         id                     = "nm62ie5"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF: Unless you have made equivalent changes to your configuration, or ignored the
TF: relevant attributes using ignore_changes, the following plan may include
TF: actions to undo or respond to these changes.
TF: ─────────────────────────────────────────────────────────────────────────────
TF: Terraform used the selected providers to generate the following execution
TF: plan. Resource actions are indicated with the following symbols:
TF:   - destroy
TF: Terraform will perform the following actions:
TF:   # module.api.aws_api_gateway_account.api will be destroyed
TF:   - resource "aws_api_gateway_account" "api" {
TF:       - cloudwatch_role_arn = "arn:aws:iam::158175150896:role/project-dev-api-cloudwatch-4byktiy" -> null
TF:       - id                  = "api-gateway-account" -> null
TF:       - throttle_settings   = [
TF:           - {
TF:               - burst_limit = 5000
TF:               - rate_limit  = 10000
TF:             },
TF:         ] -> null
TF:     }
TF:   # module.api.aws_iam_role.cloudwatch will be destroyed
TF:   - resource "aws_iam_role" "cloudwatch" {
TF:       - arn                   = "arn:aws:iam::158175150896:role/project-dev-api-cloudwatch-4byktiy" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "apigateway.amazonaws.com"
TF:                         }
TF:                       - Sid       = ""
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-11-03T12:35:27Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "project-dev-api-cloudwatch-4byktiy" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "project-dev-api-cloudwatch-4byktiy" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - unique_id             = "AROASJU7ZIMYPCWMOSCWK" -> null
TF:       - inline_policy {
TF:           - name   = "project-dev-api-cloudwatch-4byktiy" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = [
TF:                               - "logs:CreateLogGroup",
TF:                               - "logs:CreateLogStream",
TF:                               - "logs:DescribeLogGroups",
TF:                               - "logs:DescribeLogStreams",
TF:                               - "logs:PutLogEvents",
TF:                               - "logs:GetLogEvents",
TF:                               - "logs:FilterLogEvents",
TF:                             ]
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.aws_iam_role_policy.cloudwatch will be destroyed
TF:   - resource "aws_iam_role_policy" "cloudwatch" {
TF:       - id     = "project-dev-api-cloudwatch-4byktiy:project-dev-api-cloudwatch-4byktiy" -> null
TF:       - name   = "project-dev-api-cloudwatch-4byktiy" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = [
TF:                           - "logs:CreateLogGroup",
TF:                           - "logs:CreateLogStream",
TF:                           - "logs:DescribeLogGroups",
TF:                           - "logs:DescribeLogStreams",
TF:                           - "logs:PutLogEvents",
TF:                           - "logs:GetLogEvents",
TF:                           - "logs:FilterLogEvents",
TF:                         ]
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "project-dev-api-cloudwatch-4byktiy" -> null
TF:     }
TF:   # module.functions.aws_cloudwatch_log_group.functions_log_groups["ping"] will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:       - arn               = "arn:aws:logs:eu-central-1:158175150896:log-group:/aws/lambda/project-dev-ping-4byktiy" -> null
TF:       - id                = "/aws/lambda/project-dev-ping-4byktiy" -> null
TF:       - name              = "/aws/lambda/project-dev-ping-4byktiy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all          = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.functions.aws_iam_instance_profile.lambda will be destroyed
TF:   - resource "aws_iam_instance_profile" "lambda" {
TF:       - arn         = "arn:aws:iam::158175150896:instance-profile/project-dev-4byktiy" -> null
TF:       - create_date = "2021-11-03T12:35:29Z" -> null
TF:       - id          = "project-dev-4byktiy" -> null
TF:       - name        = "project-dev-4byktiy" -> null
TF:       - path        = "/" -> null
TF:       - role        = "project-dev-4byktiy" -> null
TF:       - tags        = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all    = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - unique_id   = "AIPASJU7ZIMYJQVZXS5QR" -> null
TF:     }
TF:   # module.functions.aws_iam_role.lambda will be destroyed
TF:   - resource "aws_iam_role" "lambda" {
TF:       - arn                   = "arn:aws:iam::158175150896:role/project-dev-4byktiy" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-11-03T12:35:27Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "project-dev-4byktiy" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "project-dev-4byktiy" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - unique_id             = "AROASJU7ZIMYKS5A5672L" -> null
TF:       - inline_policy {
TF:           - name   = "project-dev-4byktiy" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.functions.aws_iam_role_policy.lambda will be destroyed
TF:   - resource "aws_iam_role_policy" "lambda" {
TF:       - id     = "project-dev-4byktiy:project-dev-4byktiy" -> null
TF:       - name   = "project-dev-4byktiy" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "project-dev-4byktiy" -> null
TF:     }
TF:   # module.functions.aws_lambda_function.functions["ping"] will be destroyed
TF:   - resource "aws_lambda_function" "functions" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy" -> null
TF:       - function_name                  = "project-dev-ping-4byktiy" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "project-dev-ping-4byktiy" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy/invocations" -> null
TF:       - last_modified                  = "2021-11-03T12:35:42.739+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::158175150896:role/project-dev-4byktiy" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-eu-central-1-4byktiy" -> null
TF:       - s3_key                         = "stages/project/dev/functions/ping-4e095e28.zip" -> null
TF:       - source_code_hash               = "ZAThuiTxjAvzrnvNuGgNsdEyi281yD1jL6nK6k/0hnI=" -> null
TF:       - source_code_size               = 6381476 -> null
TF:       - tags                           = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                       = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - timeout                        = 900 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_GO_CONFIG" = "eyJSZXNvdXJjZVRhZ3MiOnsiTUFOVElMX0tFWSI6IjRieWt0aXkiLCJNQU5USUxfUFJPSkVDVCI6InByb2plY3QiLCJNQU5USUxfU1RBR0UiOiJkZXYiLCJNQU5USUxfV09SS1NQQUNFIjoiaXZsYXNpYyJ9LCJXc0ZvcndhcmRlck5hbWUiOiJwcm9qZWN0LWRldi13cy1mb3J3YXJkZXItNGJ5a3RpeSJ9"
TF:               - "MANTIL_KEY"       = "4byktiy"
TF:               - "MANTIL_PROJECT"   = "project"
TF:               - "MANTIL_STAGE"     = "dev"
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.public_site.aws_s3_bucket.public will be destroyed
TF:   - resource "aws_s3_bucket" "public" {
TF:       - acl                         = "public-read" -> null
TF:       - arn                         = "arn:aws:s3:::mantil-public-project-dev-4byktiy" -> null
TF:       - bucket                      = "mantil-public-project-dev-4byktiy" -> null
TF:       - bucket_domain_name          = "mantil-public-project-dev-4byktiy.s3.amazonaws.com" -> null
TF:       - bucket_regional_domain_name = "mantil-public-project-dev-4byktiy.s3.eu-central-1.amazonaws.com" -> null
TF:       - force_destroy               = true -> null
TF:       - hosted_zone_id              = "Z21DNDUVLTQW6Q" -> null
TF:       - id                          = "mantil-public-project-dev-4byktiy" -> null
TF:       - region                      = "eu-central-1" -> null
TF:       - request_payer               = "BucketOwner" -> null
TF:       - tags                        = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                    = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - website_domain              = "s3-website.eu-central-1.amazonaws.com" -> null
TF:       - website_endpoint            = "mantil-public-project-dev-4byktiy.s3-website.eu-central-1.amazonaws.com" -> null
TF:       - versioning {
TF:           - enabled    = false -> null
TF:           - mfa_delete = false -> null
TF:         }
TF:       - website {
TF:           - error_document = "index.html" -> null
TF:           - index_document = "index.html" -> null
TF:         }
TF:     }
TF:   # module.public_site.aws_s3_bucket_policy.public_read will be destroyed
TF:   - resource "aws_s3_bucket_policy" "public_read" {
TF:       - bucket = "mantil-public-project-dev-4byktiy" -> null
TF:       - id     = "mantil-public-project-dev-4byktiy" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "s3:GetObject"
TF:                       - Effect    = "Allow"
TF:                       - Principal = "*"
TF:                       - Resource  = [
TF:                           - "arn:aws:s3:::mantil-public-project-dev-4byktiy",
TF:                           - "arn:aws:s3:::mantil-public-project-dev-4byktiy/*",
TF:                         ]
TF:                       - Sid       = "PublicReadGetObject"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_api.http will be destroyed
TF:   - resource "aws_apigatewayv2_api" "http" {
TF:       - api_endpoint                 = "https://y3z3mojmrk.execute-api.eu-central-1.amazonaws.com" -> null
TF:       - api_key_selection_expression = "$request.header.x-api-key" -> null
TF:       - arn                          = "arn:aws:apigateway:eu-central-1::/apis/y3z3mojmrk" -> null
TF:       - disable_execute_api_endpoint = false -> null
TF:       - execution_arn                = "arn:aws:execute-api:eu-central-1:158175150896:y3z3mojmrk" -> null
TF:       - id                           = "y3z3mojmrk" -> null
TF:       - name                         = "project-dev-http-4byktiy" -> null
TF:       - protocol_type                = "HTTP" -> null
TF:       - route_selection_expression   = "$request.method $request.path" -> null
TF:       - tags                         = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                     = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - cors_configuration {
TF:           - allow_credentials = false -> null
TF:           - allow_headers     = [] -> null
TF:           - allow_methods     = [] -> null
TF:           - allow_origins     = [
TF:               - "*",
TF:             ] -> null
TF:           - expose_headers    = [] -> null
TF:           - max_age           = 0 -> null
TF:         }
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_deployment.http will be destroyed
TF:   - resource "aws_apigatewayv2_deployment" "http" {
TF:       - api_id        = "y3z3mojmrk" -> null
TF:       - auto_deployed = false -> null
TF:       - id            = "w60gbl" -> null
TF:       - triggers      = {
TF:           - "redeployment" = "df7151eff970109ce06c16a9413fe2aba2997e82"
TF:         } -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http["/ping/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "y3z3mojmrk" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "r6n66x0" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http["/public/GET"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "y3z3mojmrk" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "0b8nt7k" -> null
TF:       - integration_method     = "GET" -> null
TF:       - integration_type       = "HTTP_PROXY" -> null
TF:       - integration_uri        = "http://mantil-public-project-dev-4byktiy.s3-website.eu-central-1.amazonaws.com" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/ping/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "y3z3mojmrk" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "tjgijo4" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/public/GET"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "y3z3mojmrk" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "bpscsbm" -> null
TF:       - integration_method     = "GET" -> null
TF:       - integration_type       = "HTTP_PROXY" -> null
TF:       - integration_uri        = "http://mantil-public-project-dev-4byktiy.s3-website.eu-central-1.amazonaws.com/{proxy}" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http["/ping/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "y3z3mojmrk" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "o9axkru" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /ping" -> null
TF:       - target               = "integrations/r6n66x0" -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http["/public/GET"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "y3z3mojmrk" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "odut994" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "GET /public" -> null
TF:       - target               = "integrations/0b8nt7k" -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/ping/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "y3z3mojmrk" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "yxjcd6g" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /ping/{proxy+}" -> null
TF:       - target               = "integrations/tjgijo4" -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/public/GET"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "y3z3mojmrk" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "yohyk56" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "GET /public/{proxy+}" -> null
TF:       - target               = "integrations/bpscsbm" -> null
TF:     }
TF:   # module.api.module.http_api.aws_apigatewayv2_stage.http_default will be destroyed
TF:   - resource "aws_apigatewayv2_stage" "http_default" {
TF:       - api_id          = "y3z3mojmrk" -> null
TF:       - arn             = "arn:aws:apigateway:eu-central-1::/apis/y3z3mojmrk/stages/$default" -> null
TF:       - auto_deploy     = false -> null
TF:       - deployment_id   = "w60gbl" -> null
TF:       - execution_arn   = "arn:aws:execute-api:eu-central-1:158175150896:y3z3mojmrk/$default" -> null
TF:       - id              = "$default" -> null
TF:       - invoke_url      = "https://y3z3mojmrk.execute-api.eu-central-1.amazonaws.com/" -> null
TF:       - name            = "$default" -> null
TF:       - stage_variables = {} -> null
TF:       - tags            = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all        = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - access_log_settings {
TF:           - destination_arn = "arn:aws:logs:eu-central-1:158175150896:log-group:project-dev-http-access-logs-4byktiy" -> null
TF:           - format          = jsonencode(
TF:                 {
TF:                   - httpMethod     = "$context.httpMethod"
TF:                   - ip             = "$context.identity.sourceIp"
TF:                   - protocol       = "$context.protocol"
TF:                   - requestId      = "$context.requestId"
TF:                   - requestTime    = "$context.requestTime"
TF:                   - responseLength = "$context.responseLength"
TF:                   - routeKey       = "$context.routeKey"
TF:                   - status         = "$context.status"
TF:                 }
TF:             ) -> null
TF:         }
TF:       - default_route_settings {
TF:           - data_trace_enabled       = false -> null
TF:           - detailed_metrics_enabled = true -> null
TF:           - throttling_burst_limit   = 5000 -> null
TF:           - throttling_rate_limit    = 10000 -> null
TF:         }
TF:     }
TF:   # module.api.module.http_api.aws_cloudwatch_log_group.http_access_logs will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "http_access_logs" {
TF:       - arn               = "arn:aws:logs:eu-central-1:158175150896:log-group:project-dev-http-access-logs-4byktiy" -> null
TF:       - id                = "project-dev-http-access-logs-4byktiy" -> null
TF:       - name              = "project-dev-http-access-logs-4byktiy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all          = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.api.module.http_api.aws_lambda_permission.api_gateway_invoke["/ping/POST"] will be destroyed
TF:   - resource "aws_lambda_permission" "api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ping-4byktiy" -> null
TF:       - id            = "terraform-20211103123542482500000001" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:158175150896:y3z3mojmrk/*/*" -> null
TF:       - statement_id  = "terraform-20211103123542482500000001" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_api.ws will be destroyed
TF:   - resource "aws_apigatewayv2_api" "ws" {
TF:       - api_endpoint                 = "wss://rjj99anpxg.execute-api.eu-central-1.amazonaws.com" -> null
TF:       - api_key_selection_expression = "$request.header.x-api-key" -> null
TF:       - arn                          = "arn:aws:apigateway:eu-central-1::/apis/rjj99anpxg" -> null
TF:       - disable_execute_api_endpoint = false -> null
TF:       - execution_arn                = "arn:aws:execute-api:eu-central-1:158175150896:rjj99anpxg" -> null
TF:       - id                           = "rjj99anpxg" -> null
TF:       - name                         = "project-dev-ws-4byktiy" -> null
TF:       - protocol_type                = "WEBSOCKET" -> null
TF:       - route_selection_expression   = "\\$default" -> null
TF:       - tags                         = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                     = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_deployment.ws will be destroyed
TF:   - resource "aws_apigatewayv2_deployment" "ws" {
TF:       - api_id        = "rjj99anpxg" -> null
TF:       - auto_deployed = false -> null
TF:       - id            = "zvo2lr" -> null
TF:       - triggers      = {
TF:           - "redeployment" = "c778321a42e30d472ae48513bfd66a00dd432620"
TF:         } -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_integration.ws_handler will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "ws_handler" {
TF:       - api_id                 = "rjj99anpxg" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "nm62ie5" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-handler-4byktiy/invocations" -> null
TF:       - passthrough_behavior   = "WHEN_NO_MATCH" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 29000 -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$default"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler" {
TF:       - api_id               = "rjj99anpxg" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "ceqk23a" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$default" -> null
TF:       - target               = "integrations/nm62ie5" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$disconnect"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler" {
TF:       - api_id               = "rjj99anpxg" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "8k637uo" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$disconnect" -> null
TF:       - target               = "integrations/nm62ie5" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler_connect will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler_connect" {
TF:       - api_id               = "rjj99anpxg" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "4pwp426" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$connect" -> null
TF:       - target               = "integrations/nm62ie5" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_apigatewayv2_stage.ws_default will be destroyed
TF:   - resource "aws_apigatewayv2_stage" "ws_default" {
TF:       - api_id          = "rjj99anpxg" -> null
TF:       - arn             = "arn:aws:apigateway:eu-central-1::/apis/rjj99anpxg/stages/$default" -> null
TF:       - auto_deploy     = false -> null
TF:       - deployment_id   = "zvo2lr" -> null
TF:       - execution_arn   = "arn:aws:execute-api:eu-central-1:158175150896:rjj99anpxg/$default" -> null
TF:       - id              = "$default" -> null
TF:       - invoke_url      = "wss://rjj99anpxg.execute-api.eu-central-1.amazonaws.com/$default" -> null
TF:       - name            = "$default" -> null
TF:       - stage_variables = {} -> null
TF:       - tags            = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all        = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - access_log_settings {
TF:           - destination_arn = "arn:aws:logs:eu-central-1:158175150896:log-group:project-dev-ws-access-logs-4byktiy" -> null
TF:           - format          = jsonencode(
TF:                 {
TF:                   - caller       = "$context.identity.caller"
TF:                   - connectionId = "$context.connectionId"
TF:                   - eventType    = "$context.eventType"
TF:                   - ip           = "$context.identity.sourceIp"
TF:                   - requestId    = "$context.requestId"
TF:                   - requestTime  = "$context.requestTime"
TF:                   - routeKey     = "$context.routeKey"
TF:                   - status       = "$context.status"
TF:                   - user         = "$context.identity.user"
TF:                 }
TF:             ) -> null
TF:         }
TF:       - default_route_settings {
TF:           - data_trace_enabled       = true -> null
TF:           - detailed_metrics_enabled = true -> null
TF:           - logging_level            = "INFO" -> null
TF:           - throttling_burst_limit   = 5000 -> null
TF:           - throttling_rate_limit    = 10000 -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_access_logs will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "ws_access_logs" {
TF:       - arn               = "arn:aws:logs:eu-central-1:158175150896:log-group:project-dev-ws-access-logs-4byktiy" -> null
TF:       - id                = "project-dev-ws-access-logs-4byktiy" -> null
TF:       - name              = "project-dev-ws-access-logs-4byktiy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all          = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_forwarder_log_group will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "ws_forwarder_log_group" {
TF:       - arn               = "arn:aws:logs:eu-central-1:158175150896:log-group:/aws/lambda/project-dev-ws-forwarder-4byktiy" -> null
TF:       - id                = "/aws/lambda/project-dev-ws-forwarder-4byktiy" -> null
TF:       - name              = "/aws/lambda/project-dev-ws-forwarder-4byktiy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all          = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_handler_log_group will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "ws_handler_log_group" {
TF:       - arn               = "arn:aws:logs:eu-central-1:158175150896:log-group:/aws/lambda/project-dev-ws-handler-4byktiy" -> null
TF:       - id                = "/aws/lambda/project-dev-ws-handler-4byktiy" -> null
TF:       - name              = "/aws/lambda/project-dev-ws-handler-4byktiy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all          = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_dynamodb_table.table will be destroyed
TF:   - resource "aws_dynamodb_table" "table" {
TF:       - arn            = "arn:aws:dynamodb:eu-central-1:158175150896:table/project-dev-ws-connections-4byktiy" -> null
TF:       - billing_mode   = "PAY_PER_REQUEST" -> null
TF:       - hash_key       = "PK" -> null
TF:       - id             = "project-dev-ws-connections-4byktiy" -> null
TF:       - name           = "project-dev-ws-connections-4byktiy" -> null
TF:       - range_key      = "SK" -> null
TF:       - read_capacity  = 0 -> null
TF:       - stream_enabled = false -> null
TF:       - tags           = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all       = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - write_capacity = 0 -> null
TF:       - attribute {
TF:           - name = "PK" -> null
TF:           - type = "S" -> null
TF:         }
TF:       - attribute {
TF:           - name = "SK" -> null
TF:           - type = "S" -> null
TF:         }
TF:       - point_in_time_recovery {
TF:           - enabled = false -> null
TF:         }
TF:       - ttl {
TF:           - enabled = false -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role.ws_forwarder will be destroyed
TF:   - resource "aws_iam_role" "ws_forwarder" {
TF:       - arn                   = "arn:aws:iam::158175150896:role/project-dev-ws-forwarder-4byktiy" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-11-03T12:35:27Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "project-dev-ws-forwarder-4byktiy" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "project-dev-ws-forwarder-4byktiy" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - unique_id             = "AROASJU7ZIMYIIJMERZEB" -> null
TF:       - inline_policy {
TF:           - name   = "project-dev-ws-forwarder-4byktiy" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role.ws_handler will be destroyed
TF:   - resource "aws_iam_role" "ws_handler" {
TF:       - arn                   = "arn:aws:iam::158175150896:role/project-dev-ws-handler-4byktiy" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-11-03T12:35:27Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "project-dev-ws-handler-4byktiy" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "project-dev-ws-handler-4byktiy" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all              = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - unique_id             = "AROASJU7ZIMYGWOBMLNQN" -> null
TF:       - inline_policy {
TF:           - name   = "project-dev-ws-handler-4byktiy" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role_policy.ws_forwarder will be destroyed
TF:   - resource "aws_iam_role_policy" "ws_forwarder" {
TF:       - id     = "project-dev-ws-forwarder-4byktiy:project-dev-ws-forwarder-4byktiy" -> null
TF:       - name   = "project-dev-ws-forwarder-4byktiy" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "project-dev-ws-forwarder-4byktiy" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_iam_role_policy.ws_handler will be destroyed
TF:   - resource "aws_iam_role_policy" "ws_handler" {
TF:       - id     = "project-dev-ws-handler-4byktiy:project-dev-ws-handler-4byktiy" -> null
TF:       - name   = "project-dev-ws-handler-4byktiy" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "project-dev-ws-handler-4byktiy" -> null
TF:     }
TF:   # module.api.module.ws_api[0].aws_lambda_function.ws_forwarder will be destroyed
TF:   - resource "aws_lambda_function" "ws_forwarder" {
TF:       - architectures                  = [
TF:           - "arm64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-forwarder-4byktiy" -> null
TF:       - function_name                  = "project-dev-ws-forwarder-4byktiy" -> null
TF:       - handler                        = "runtime" -> null
TF:       - id                             = "project-dev-ws-forwarder-4byktiy" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-forwarder-4byktiy/invocations" -> null
TF:       - last_modified                  = "2021-11-03T12:35:45.249+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-forwarder-4byktiy:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::158175150896:role/project-dev-ws-forwarder-4byktiy" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-releases" -> null
TF:       - s3_key                         = "dev/ivlasic/v0.1.14-37-g94c1455/ws-forwarder.zip" -> null
TF:       - source_code_hash               = "jjthzJ9uPPrSWzZGAu3vDd/62atDCkSZzI/09CYnhX8=" -> null
TF:       - source_code_size               = 7410499 -> null
TF:       - tags                           = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                       = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - timeout                        = 3 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_KEY"      = "4byktiy"
TF:               - "MANTIL_KV_TABLE" = "project-dev-ws-connections-4byktiy"
TF:               - "MANTIL_PROJECT"  = "project"
TF:               - "MANTIL_STAGE"    = "dev"
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_lambda_function.ws_handler will be destroyed
TF:   - resource "aws_lambda_function" "ws_handler" {
TF:       - architectures                  = [
TF:           - "arm64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-handler-4byktiy" -> null
TF:       - function_name                  = "project-dev-ws-handler-4byktiy" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "project-dev-ws-handler-4byktiy" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-handler-4byktiy/invocations" -> null
TF:       - last_modified                  = "2021-11-03T12:35:52.916+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:158175150896:function:project-dev-ws-handler-4byktiy:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::158175150896:role/project-dev-ws-handler-4byktiy" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-releases" -> null
TF:       - s3_key                         = "dev/ivlasic/v0.1.14-37-g94c1455/ws-handler.zip" -> null
TF:       - source_code_hash               = "vg/cTInUfZtAqI0SCQVjyCq858piRU64wc5L3pFiYlQ=" -> null
TF:       - source_code_size               = 7474149 -> null
TF:       - tags                           = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - tags_all                       = {
TF:           - "MANTIL_KEY"       = "4byktiy"
TF:           - "MANTIL_PROJECT"   = "project"
TF:           - "MANTIL_STAGE"     = "dev"
TF:           - "MANTIL_WORKSPACE" = "ivlasic"
TF:         } -> null
TF:       - timeout                        = 3 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_KEY"      = "4byktiy"
TF:               - "MANTIL_KV_TABLE" = "project-dev-ws-connections-4byktiy"
TF:               - "MANTIL_PROJECT"  = "project"
TF:               - "MANTIL_STAGE"    = "dev"
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.api.module.ws_api[0].aws_lambda_permission.ws_handler_api_gateway_invoke will be destroyed
TF:   - resource "aws_lambda_permission" "ws_handler_api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "project-dev-ws-handler-4byktiy" -> null
TF:       - id            = "AllowAPIGatewayInvoke" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:158175150896:rjj99anpxg/*/*" -> null
TF:       - statement_id  = "AllowAPIGatewayInvoke" -> null
TF:     }
TF: Plan: 0 to add, 0 to change, 41 to destroy.
TF: >> terraform apply -no-color -input=false -compact-warnings -destroy tfplan
TF: module.api.module.ws_api[0].aws_apigatewayv2_stage.ws_default: Destroying... [id=$default]
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_handler: Destroying... [id=project-dev-ws-handler-4byktiy:project-dev-ws-handler-4byktiy]
TF: module.functions.aws_iam_role_policy.lambda: Destroying... [id=project-dev-4byktiy:project-dev-4byktiy]
TF: module.api.module.http_api.aws_lambda_permission.api_gateway_invoke["/ping/POST"]: Destroying... [id=terraform-20211103123542482500000001]
TF: module.api.module.http_api.aws_apigatewayv2_stage.http_default: Destroying... [id=$default]
TF: module.api.aws_iam_role_policy.cloudwatch: Destroying... [id=project-dev-api-cloudwatch-4byktiy:project-dev-api-cloudwatch-4byktiy]
TF: module.public_site.aws_s3_bucket_policy.public_read: Destroying... [id=mantil-public-project-dev-4byktiy]
TF: module.functions.aws_iam_instance_profile.lambda: Destroying... [id=project-dev-4byktiy]
TF: module.functions.aws_cloudwatch_log_group.functions_log_groups["ping"]: Destroying... [id=/aws/lambda/project-dev-ping-4byktiy]
TF: module.api.module.ws_api[0].aws_dynamodb_table.table: Destroying... [id=project-dev-ws-connections-4byktiy]
TF: module.api.module.http_api.aws_lambda_permission.api_gateway_invoke["/ping/POST"]: Destruction complete after 1s
TF: module.api.aws_api_gateway_account.api: Destroying... [id=api-gateway-account]
TF: module.api.aws_api_gateway_account.api: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_forwarder_log_group: Destroying... [id=/aws/lambda/project-dev-ws-forwarder-4byktiy]
TF: module.functions.aws_cloudwatch_log_group.functions_log_groups["ping"]: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_handler_log_group: Destroying... [id=/aws/lambda/project-dev-ws-handler-4byktiy]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_forwarder_log_group: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_lambda_permission.ws_handler_api_gateway_invoke: Destroying... [id=AllowAPIGatewayInvoke]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_handler_log_group: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_lambda_function.ws_forwarder: Destroying... [id=project-dev-ws-forwarder-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_stage.ws_default: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_lambda_permission.ws_handler_api_gateway_invoke: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_forwarder: Destroying... [id=project-dev-ws-forwarder-4byktiy:project-dev-ws-forwarder-4byktiy]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_access_logs: Destroying... [id=project-dev-ws-access-logs-4byktiy]
TF: module.public_site.aws_s3_bucket_policy.public_read: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_apigatewayv2_deployment.ws: Destroying... [id=zvo2lr]
TF: module.api.module.ws_api[0].aws_cloudwatch_log_group.ws_access_logs: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_lambda_function.ws_forwarder: Destruction complete after 0s
TF: module.api.aws_iam_role_policy.cloudwatch: Destruction complete after 1s
TF: module.api.aws_iam_role.cloudwatch: Destroying... [id=project-dev-api-cloudwatch-4byktiy]
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_handler: Destruction complete after 1s
TF: module.functions.aws_iam_role_policy.lambda: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_stage.http_default: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_deployment.http: Destroying... [id=w60gbl]
TF: module.api.module.http_api.aws_cloudwatch_log_group.http_access_logs: Destroying... [id=project-dev-http-access-logs-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_deployment.ws: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$default"]: Destroying... [id=ceqk23a]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler_connect: Destroying... [id=4pwp426]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$disconnect"]: Destroying... [id=8k637uo]
TF: module.api.module.http_api.aws_cloudwatch_log_group.http_access_logs: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_deployment.http: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/public/GET"]: Destroying... [id=yohyk56]
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/public/GET"]: Destroying... [id=odut994]
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/ping/POST"]: Destroying... [id=o9axkru]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$default"]: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler_connect: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/ping/POST"]: Destroying... [id=yxjcd6g]
TF: module.api.module.ws_api[0].aws_iam_role_policy.ws_forwarder: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_iam_role.ws_forwarder: Destroying... [id=project-dev-ws-forwarder-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_route.ws_handler["$disconnect"]: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_apigatewayv2_integration.ws_handler: Destroying... [id=nm62ie5]
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/public/GET"]: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/public/GET"]: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_route.http_proxy["/ping/POST"]: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/public/GET"]: Destroying... [id=bpscsbm]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/ping/POST"]: Destroying... [id=tjgijo4]
TF: module.functions.aws_iam_instance_profile.lambda: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_route.http["/ping/POST"]: Destruction complete after 0s
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/public/GET"]: Destroying... [id=0b8nt7k]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/ping/POST"]: Destroying... [id=r6n66x0]
TF: module.api.module.ws_api[0].aws_apigatewayv2_integration.ws_handler: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_apigatewayv2_api.ws: Destroying... [id=rjj99anpxg]
TF: module.api.module.ws_api[0].aws_lambda_function.ws_handler: Destroying... [id=project-dev-ws-handler-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/ping/POST"]: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_integration.http_proxy["/public/GET"]: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/ping/POST"]: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_lambda_function.ws_handler: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_iam_role.ws_handler: Destroying... [id=project-dev-ws-handler-4byktiy]
TF: module.api.module.http_api.aws_apigatewayv2_integration.http["/public/GET"]: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_api.http: Destroying... [id=y3z3mojmrk]
TF: module.public_site.aws_s3_bucket.public: Destroying... [id=mantil-public-project-dev-4byktiy]
TF: module.functions.aws_lambda_function.functions["ping"]: Destroying... [id=project-dev-ping-4byktiy]
TF: module.functions.aws_lambda_function.functions["ping"]: Destruction complete after 0s
TF: module.functions.aws_iam_role.lambda: Destroying... [id=project-dev-4byktiy]
TF: module.api.module.ws_api[0].aws_apigatewayv2_api.ws: Destruction complete after 1s
TF: module.api.aws_iam_role.cloudwatch: Destruction complete after 1s
TF: module.public_site.aws_s3_bucket.public: Destruction complete after 0s
TF: module.api.module.ws_api[0].aws_dynamodb_table.table: Destruction complete after 1s
TF: module.api.module.http_api.aws_apigatewayv2_api.http: Destruction complete after 1s
TF: module.api.module.ws_api[0].aws_iam_role.ws_forwarder: Destruction complete after 3s
TF: module.functions.aws_iam_role.lambda: Destruction complete after 2s
TF: module.api.module.ws_api[0].aws_iam_role.ws_handler: Destruction complete after 2s
TF: Apply complete! Resources: 0 added, 0 changed, 41 destroyed.
