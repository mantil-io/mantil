TF: >> terraform init -no-color -input=false -migrate-state
TF: Initializing the backend...
TF: Successfully configured the backend "s3"! Terraform will automatically
TF: use this backend unless the backend configuration changes.
TF: Initializing provider plugins...
TF: - Finding latest version of hashicorp/aws...
TF: - Installing hashicorp/aws v3.61.0...
TF: - Installed hashicorp/aws v3.61.0 (signed by HashiCorp)
TF: Terraform has created a lock file .terraform.lock.hcl to record the provider
TF: selections it made above. Include this file in your version control repository
TF: so that Terraform can guarantee to make the same selections by default when
TF: you run "terraform init" in the future.
TF: Terraform has been successfully initialized!
TF: You may now begin working with Terraform. Try running "terraform plan" to see
TF: any changes that are required for your infrastructure. All Terraform commands
TF: should now work.
TF: If you ever set or change modules or backend configuration for Terraform,
TF: rerun this command to reinitialize your working directory. If you forget, other
TF: commands will detect it and remind you to do so if necessary.
TF: >> terraform plan -no-color -input=false -out=tfplan -destroy
TF: module.api.aws_cloudwatch_log_group.authorizer_log_group: Refreshing state... [id=/aws/lambda/mantil-authorizer]
TF: module.funcs.aws_iam_instance_profile.lambda: Refreshing state... [id=mantil-lambda]
TF: module.api.aws_lambda_permission.authorizer_http_api_gateway_invoke[0]: Refreshing state... [id=terraform-20211007105905287900000001]
TF: module.api.aws_lambda_event_source_mapping.handler_trigger: Refreshing state... [id=11bf82d8-32fb-43c9-961e-033cc7e3aa7e]
TF: module.api.aws_lambda_function.authorizer[0]: Refreshing state... [id=mantil-authorizer]
TF: module.api.aws_iam_role.authorizer[0]: Refreshing state... [id=mantil-authorizer]
TF: module.api.aws_apigatewayv2_api.ws: Refreshing state... [id=vmhre93kmj]
TF: module.api.aws_apigatewayv2_route.http["/security/POST"]: Refreshing state... [id=qbpxqg8]
TF: module.api.aws_iam_role_policy.sqs_forwarder: Refreshing state... [id=mantil-ws-sqs-forwarder:mantil-ws-sqs-forwarder]
TF: module.api.aws_apigatewayv2_integration.http["/destroy/POST"]: Refreshing state... [id=q12p7pk]
TF: module.api.aws_apigatewayv2_integration.http_proxy["/deploy/POST"]: Refreshing state... [id=0i47503]
TF: module.api.aws_apigatewayv2_integration.http["/security/POST"]: Refreshing state... [id=deqqyp4]
TF: module.api.aws_lambda_function.sqs_forwarder: Refreshing state... [id=mantil-sqs-forwarder]
TF: module.api.aws_apigatewayv2_route.http_proxy["/deploy/POST"]: Refreshing state... [id=0jutnii]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["deploy"]: Refreshing state... [id=/aws/lambda/mantil-deploy]
TF: module.api.aws_iam_role.sqs_forwarder: Refreshing state... [id=mantil-ws-sqs-forwarder]
TF: module.api.aws_apigatewayv2_route.http_proxy["/destroy/POST"]: Refreshing state... [id=l7o9a6k]
TF: module.api.aws_apigatewayv2_authorizer.http[0]: Refreshing state... [id=168bgc]
TF: module.funcs.aws_lambda_function.functions["deploy"]: Refreshing state... [id=mantil-deploy]
TF: module.api.aws_apigatewayv2_deployment.http: Refreshing state... [id=1kor1z]
TF: module.api.aws_cloudwatch_log_group.ws_handler_log_group: Refreshing state... [id=/aws/lambda/mantil-ws-handler]
TF: module.api.aws_lambda_function.ws_handler: Refreshing state... [id=mantil-ws-handler]
TF: module.api.aws_iam_role_policy.authorizer[0]: Refreshing state... [id=mantil-authorizer:mantil-authorizer]
TF: module.api.aws_apigatewayv2_stage.ws_default: Refreshing state... [id=$default]
TF: module.api.aws_sqs_queue.queue: Refreshing state... [id=https://sqs.eu-central-1.amazonaws.com/052548195718/mantil-ws-queue.fifo]
TF: module.funcs.aws_iam_role_policy.lambda: Refreshing state... [id=mantil-lambda:mantil-lambda]
TF: module.api.aws_dynamodb_table.table: Refreshing state... [id=mantil-ws-connections]
TF: module.api.aws_apigatewayv2_route.http["/deploy/POST"]: Refreshing state... [id=5j1w722]
TF: module.iam.aws_iam_role_policy.cli_user: Refreshing state... [id=mantil-cli-user:mantil-cli-user]
TF: module.api.aws_apigatewayv2_route.ws_handler_connect: Refreshing state... [id=0tci2dn]
TF: module.api.aws_apigatewayv2_integration.http_proxy["/data/POST"]: Refreshing state... [id=gxekwnm]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["security"]: Refreshing state... [id=/aws/lambda/mantil-security]
TF: module.iam.aws_iam_role.cli_user: Refreshing state... [id=mantil-cli-user]
TF: module.api.aws_iam_role_policy.ws_handler: Refreshing state... [id=mantil-ws-handler:mantil-ws-handler]
TF: module.api.aws_apigatewayv2_integration.http_proxy["/destroy/POST"]: Refreshing state... [id=4x2n41f]
TF: module.api.aws_apigatewayv2_route.http["/data/POST"]: Refreshing state... [id=voec4z0]
TF: module.api.aws_apigatewayv2_route.http_proxy["/security/POST"]: Refreshing state... [id=qb9xjyj]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/data/POST"]: Refreshing state... [id=terraform-20211007105913067800000004]
TF: module.api.aws_apigatewayv2_route.ws_handler["$disconnect"]: Refreshing state... [id=skfzdr0]
TF: module.api.aws_apigatewayv2_integration.http_proxy["/security/POST"]: Refreshing state... [id=85yxxl4]
TF: module.api.aws_apigatewayv2_authorizer.ws[0]: Refreshing state... [id=iv3o85]
TF: module.funcs.aws_lambda_function.functions["destroy"]: Refreshing state... [id=mantil-destroy]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/security/POST"]: Refreshing state... [id=terraform-20211007105912947500000003]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["destroy"]: Refreshing state... [id=/aws/lambda/mantil-destroy]
TF: module.funcs.aws_iam_role.lambda: Refreshing state... [id=mantil-lambda]
TF: module.api.aws_apigatewayv2_deployment.ws: Refreshing state... [id=puij8o]
TF: module.api.aws_apigatewayv2_integration.http["/deploy/POST"]: Refreshing state... [id=m4mlmz0]
TF: module.api.aws_iam_role.ws_handler: Refreshing state... [id=mantil-ws-handler]
TF: module.api.aws_apigatewayv2_stage.http_default: Refreshing state... [id=$default]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/deploy/POST"]: Refreshing state... [id=terraform-20211007105913168500000006]
TF: module.api.aws_apigatewayv2_api.http: Refreshing state... [id=1d6rczzqu9]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["data"]: Refreshing state... [id=/aws/lambda/mantil-data]
TF: module.api.aws_apigatewayv2_route.http_proxy["/data/POST"]: Refreshing state... [id=8g16iza]
TF: module.api.aws_lambda_permission.authorizer_ws_api_gateway_invoke[0]: Refreshing state... [id=terraform-20211007105905288500000002]
TF: module.api.aws_apigatewayv2_integration.http["/data/POST"]: Refreshing state... [id=lp2p3be]
TF: module.funcs.aws_lambda_function.functions["data"]: Refreshing state... [id=mantil-data]
TF: module.api.aws_lambda_permission.ws_handler_api_gateway_invoke: Refreshing state... [id=AllowAPIGatewayInvoke]
TF: module.funcs.aws_lambda_function.functions["security"]: Refreshing state... [id=mantil-security]
TF: module.api.aws_cloudwatch_log_group.sqs_forwarder_log_group: Refreshing state... [id=/aws/lambda/mantil-sqs-forwarder]
TF: module.api.aws_apigatewayv2_integration.ws_handler: Refreshing state... [id=r7155ic]
TF: module.api.aws_apigatewayv2_route.http["/destroy/POST"]: Refreshing state... [id=o0zqx0p]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/destroy/POST"]: Refreshing state... [id=terraform-20211007105913068500000005]
TF: module.api.aws_apigatewayv2_route.ws_handler["$default"]: Refreshing state... [id=c7n33sa]
TF: Note: Objects have changed outside of Terraform
TF: Terraform detected the following changes made outside of Terraform since the
TF: last "terraform apply":
TF:   # module.api.aws_cloudwatch_log_group.sqs_forwarder_log_group has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "sqs_forwarder_log_group" {
TF:         id                = "/aws/lambda/mantil-sqs-forwarder"
TF:         name              = "/aws/lambda/mantil-sqs-forwarder"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler["$default"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler" {
TF:       + authorization_scopes = []
TF:         id                   = "c7n33sa"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler["$disconnect"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler" {
TF:       + authorization_scopes = []
TF:         id                   = "skfzdr0"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_cloudwatch_log_group.ws_handler_log_group has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "ws_handler_log_group" {
TF:         id                = "/aws/lambda/mantil-ws-handler"
TF:         name              = "/aws/lambda/mantil-ws-handler"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_sqs_queue.queue has been changed
TF:   ~ resource "aws_sqs_queue" "queue" {
TF:         id                                = "https://sqs.eu-central-1.amazonaws.com/052548195718/mantil-ws-queue.fifo"
TF:         name                              = "mantil-ws-queue.fifo"
TF:       + tags                              = {}
TF:         # (13 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/data/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "8g16iza"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/deploy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "0jutnii"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/destroy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "l7o9a6k"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/security/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http_proxy" {
TF:       + authorization_scopes = []
TF:         id                   = "qb9xjyj"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_iam_role.sqs_forwarder has been changed
TF:   ~ resource "aws_iam_role" "sqs_forwarder" {
TF:         id                    = "mantil-ws-sqs-forwarder"
TF:         name                  = "mantil-ws-sqs-forwarder"
TF:       + tags                  = {}
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "mantil-ws-sqs-forwarder"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.ws_handler has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "ws_handler" {
TF:         id                     = "r7155ic"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler_connect has been changed
TF:   ~ resource "aws_apigatewayv2_route" "ws_handler_connect" {
TF:       + authorization_scopes = []
TF:         id                   = "0tci2dn"
TF:       + request_models       = {}
TF:         # (6 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_lambda_event_source_mapping.handler_trigger has been changed
TF:   ~ resource "aws_lambda_event_source_mapping" "handler_trigger" {
TF:       + function_response_types            = []
TF:         id                                 = "11bf82d8-32fb-43c9-961e-033cc7e3aa7e"
TF:       + queues                             = []
TF:       + topics                             = []
TF:         # (15 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/deploy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "m4mlmz0"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/destroy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "q12p7pk"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/security/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "deqqyp4"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/data/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http" {
TF:         id                     = "lp2p3be"
TF:       + request_parameters     = {}
TF:       + request_templates      = {}
TF:         # (7 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_cloudwatch_log_group.authorizer_log_group has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "authorizer_log_group" {
TF:         id                = "/aws/lambda/mantil-authorizer"
TF:         name              = "/aws/lambda/mantil-authorizer"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/data/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "voec4z0"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/deploy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "5j1w722"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/destroy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "o0zqx0p"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/security/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_route" "http" {
TF:       + authorization_scopes = []
TF:         id                   = "qbpxqg8"
TF:       + request_models       = {}
TF:         # (5 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_iam_role.authorizer[0] has been changed
TF:   ~ resource "aws_iam_role" "authorizer" {
TF:         id                    = "mantil-authorizer"
TF:         name                  = "mantil-authorizer"
TF:       + tags                  = {}
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "mantil-authorizer"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.aws_lambda_function.ws_handler has been changed
TF:   ~ resource "aws_lambda_function" "ws_handler" {
TF:         id                             = "mantil-ws-handler"
TF:       ~ last_modified                  = "2021-10-07T10:58:59.076+0000" -> "2021-10-07T10:59:04.936+0000"
TF:       + layers                         = []
TF:       + tags                           = {}
TF:         # (19 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_stage.ws_default has been changed
TF:   ~ resource "aws_apigatewayv2_stage" "ws_default" {
TF:         id              = "$default"
TF:         name            = "$default"
TF:       + stage_variables = {}
TF:       + tags            = {}
TF:         # (7 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.api.aws_iam_role.ws_handler has been changed
TF:   ~ resource "aws_iam_role" "ws_handler" {
TF:         id                    = "mantil-ws-handler"
TF:         name                  = "mantil-ws-handler"
TF:       + tags                  = {}
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "mantil-ws-handler"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.api.aws_lambda_function.sqs_forwarder has been changed
TF:   ~ resource "aws_lambda_function" "sqs_forwarder" {
TF:         id                             = "mantil-sqs-forwarder"
TF:       + layers                         = []
TF:       + tags                           = {}
TF:         # (20 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/deploy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "0i47503"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/destroy/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "4x2n41f"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/security/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "85yxxl4"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/data/POST"] has been changed
TF:   ~ resource "aws_apigatewayv2_integration" "http_proxy" {
TF:         id                     = "gxekwnm"
TF:       + request_templates      = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_api.http has been changed
TF:   ~ resource "aws_apigatewayv2_api" "http" {
TF:         id                           = "1d6rczzqu9"
TF:         name                         = "mantil-http"
TF:       + tags                         = {}
TF:         # (8 unchanged attributes hidden)
TF:       ~ cors_configuration {
TF:           + allow_headers     = []
TF:           + allow_methods     = []
TF:           + expose_headers    = []
TF:             # (3 unchanged attributes hidden)
TF:         }
TF:     }
TF:   # module.api.aws_lambda_function.authorizer[0] has been changed
TF:   ~ resource "aws_lambda_function" "authorizer" {
TF:         id                             = "mantil-authorizer"
TF:       ~ last_modified                  = "2021-10-07T10:58:59.964+0000" -> "2021-10-07T10:59:05.359+0000"
TF:       + layers                         = []
TF:       + tags                           = {}
TF:         # (19 unchanged attributes hidden)
TF:         # (2 unchanged blocks hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_api.ws has been changed
TF:   ~ resource "aws_apigatewayv2_api" "ws" {
TF:         id                           = "vmhre93kmj"
TF:         name                         = "mantil-ws"
TF:       + tags                         = {}
TF:         # (8 unchanged attributes hidden)
TF:     }
TF:   # module.api.aws_dynamodb_table.table has been changed
TF:   ~ resource "aws_dynamodb_table" "table" {
TF:         id             = "mantil-ws-connections"
TF:         name           = "mantil-ws-connections"
TF:       + tags           = {}
TF:         # (8 unchanged attributes hidden)
TF:         # (4 unchanged blocks hidden)
TF:     }
TF:   # module.api.aws_apigatewayv2_stage.http_default has been changed
TF:   ~ resource "aws_apigatewayv2_stage" "http_default" {
TF:         id              = "$default"
TF:         name            = "$default"
TF:       + stage_variables = {}
TF:       + tags            = {}
TF:         # (7 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["destroy"] has been changed
TF:   ~ resource "aws_lambda_function" "functions" {
TF:         id                             = "mantil-destroy"
TF:       ~ last_modified                  = "2021-10-07T10:58:59.131+0000" -> "2021-10-07T10:59:13.131+0000"
TF:       + tags                           = {}
TF:         # (20 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["security"] has been changed
TF:   ~ resource "aws_lambda_function" "functions" {
TF:         id                             = "mantil-security"
TF:       ~ last_modified                  = "2021-10-07T10:59:07.562+0000" -> "2021-10-07T10:59:12.994+0000"
TF:       + tags                           = {}
TF:         # (20 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["data"] has been changed
TF:   ~ resource "aws_lambda_function" "functions" {
TF:         id                             = "mantil-data"
TF:       ~ last_modified                  = "2021-10-07T10:59:07.211+0000" -> "2021-10-07T10:59:13.114+0000"
TF:       + tags                           = {}
TF:         # (20 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["deploy"] has been changed
TF:   ~ resource "aws_lambda_function" "functions" {
TF:         id                             = "mantil-deploy"
TF:       ~ last_modified                  = "2021-10-07T10:58:59.312+0000" -> "2021-10-07T10:59:13.216+0000"
TF:       + tags                           = {}
TF:         # (20 unchanged attributes hidden)
TF:         # (1 unchanged block hidden)
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["security"] has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:         id                = "/aws/lambda/mantil-security"
TF:         name              = "/aws/lambda/mantil-security"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["data"] has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:         id                = "/aws/lambda/mantil-data"
TF:         name              = "/aws/lambda/mantil-data"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["deploy"] has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:         id                = "/aws/lambda/mantil-deploy"
TF:         name              = "/aws/lambda/mantil-deploy"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["destroy"] has been changed
TF:   ~ resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:         id                = "/aws/lambda/mantil-destroy"
TF:         name              = "/aws/lambda/mantil-destroy"
TF:       + tags              = {}
TF:         # (3 unchanged attributes hidden)
TF:     }
TF:   # module.funcs.aws_iam_instance_profile.lambda has been changed
TF:   ~ resource "aws_iam_instance_profile" "lambda" {
TF:         id          = "mantil-lambda"
TF:         name        = "mantil-lambda"
TF:       + tags        = {}
TF:         # (6 unchanged attributes hidden)
TF:     }
TF:   # module.funcs.aws_iam_role.lambda has been changed
TF:   ~ resource "aws_iam_role" "lambda" {
TF:         id                    = "mantil-lambda"
TF:         name                  = "mantil-lambda"
TF:         tags                  = {
TF:             "Name" = "mantil-lambda"
TF:         }
TF:         # (9 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "mantil-lambda"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF:   # module.iam.aws_iam_role.cli_user has been changed
TF:   ~ resource "aws_iam_role" "cli_user" {
TF:         id                    = "mantil-cli-user"
TF:         name                  = "mantil-cli-user"
TF:       + tags                  = {}
TF:         # (10 unchanged attributes hidden)
TF:       - inline_policy {}
TF:       + inline_policy {
TF:           + name   = "mantil-cli-user"
TF:           + policy = jsonencode(
TF:                 {
TF:                   + Statement = [
TF:                       + {
TF:                           + Action   = "*"
TF:                           + Effect   = "Allow"
TF:                           + Resource = "*"
TF:                         },
TF:                     ]
TF:                   + Version   = "2012-10-17"
TF:                 }
TF:             )
TF:         }
TF:     }
TF: Unless you have made equivalent changes to your configuration, or ignored the
TF: relevant attributes using ignore_changes, the following plan may include
TF: actions to undo or respond to these changes.
TF: ─────────────────────────────────────────────────────────────────────────────
TF: Terraform used the selected providers to generate the following execution
TF: plan. Resource actions are indicated with the following symbols:
TF:   - destroy
TF: Terraform will perform the following actions:
TF:   # module.api.aws_apigatewayv2_api.http will be destroyed
TF:   - resource "aws_apigatewayv2_api" "http" {
TF:       - api_endpoint                 = "https://1d6rczzqu9.execute-api.eu-central-1.amazonaws.com" -> null
TF:       - api_key_selection_expression = "$request.header.x-api-key" -> null
TF:       - arn                          = "arn:aws:apigateway:eu-central-1::/apis/1d6rczzqu9" -> null
TF:       - disable_execute_api_endpoint = false -> null
TF:       - execution_arn                = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9" -> null
TF:       - id                           = "1d6rczzqu9" -> null
TF:       - name                         = "mantil-http" -> null
TF:       - protocol_type                = "HTTP" -> null
TF:       - route_selection_expression   = "$request.method $request.path" -> null
TF:       - tags                         = {} -> null
TF:       - tags_all                     = {} -> null
TF:       - cors_configuration {
TF:           - allow_credentials = false -> null
TF:           - allow_headers     = [] -> null
TF:           - allow_methods     = [] -> null
TF:           - allow_origins     = [
TF:               - "*",
TF:             ] -> null
TF:           - expose_headers    = [] -> null
TF:           - max_age           = 0 -> null
TF:         }
TF:     }
TF:   # module.api.aws_apigatewayv2_api.ws will be destroyed
TF:   - resource "aws_apigatewayv2_api" "ws" {
TF:       - api_endpoint                 = "wss://vmhre93kmj.execute-api.eu-central-1.amazonaws.com" -> null
TF:       - api_key_selection_expression = "$request.header.x-api-key" -> null
TF:       - arn                          = "arn:aws:apigateway:eu-central-1::/apis/vmhre93kmj" -> null
TF:       - disable_execute_api_endpoint = false -> null
TF:       - execution_arn                = "arn:aws:execute-api:eu-central-1:052548195718:vmhre93kmj" -> null
TF:       - id                           = "vmhre93kmj" -> null
TF:       - name                         = "mantil-ws" -> null
TF:       - protocol_type                = "WEBSOCKET" -> null
TF:       - route_selection_expression   = "\\$default" -> null
TF:       - tags                         = {} -> null
TF:       - tags_all                     = {} -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_authorizer.http[0] will be destroyed
TF:   - resource "aws_apigatewayv2_authorizer" "http" {
TF:       - api_id                            = "1d6rczzqu9" -> null
TF:       - authorizer_payload_format_version = "1.0" -> null
TF:       - authorizer_result_ttl_in_seconds  = 300 -> null
TF:       - authorizer_type                   = "REQUEST" -> null
TF:       - authorizer_uri                    = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer/invocations" -> null
TF:       - enable_simple_responses           = false -> null
TF:       - id                                = "168bgc" -> null
TF:       - identity_sources                  = [
TF:           - "$request.header.Authorization",
TF:         ] -> null
TF:       - name                              = "mantil-http-authorizer" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_authorizer.ws[0] will be destroyed
TF:   - resource "aws_apigatewayv2_authorizer" "ws" {
TF:       - api_id                           = "vmhre93kmj" -> null
TF:       - authorizer_result_ttl_in_seconds = 0 -> null
TF:       - authorizer_type                  = "REQUEST" -> null
TF:       - authorizer_uri                   = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer/invocations" -> null
TF:       - enable_simple_responses          = false -> null
TF:       - id                               = "iv3o85" -> null
TF:       - identity_sources                 = [
TF:           - "route.request.header.Authorization",
TF:         ] -> null
TF:       - name                             = "mantil-ws-authorizer" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_deployment.http will be destroyed
TF:   - resource "aws_apigatewayv2_deployment" "http" {
TF:       - api_id        = "1d6rczzqu9" -> null
TF:       - auto_deployed = false -> null
TF:       - id            = "1kor1z" -> null
TF:       - triggers      = {
TF:           - "redeployment" = "c58d736946d9561c541ea524316253c8e485193d"
TF:         } -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_deployment.ws will be destroyed
TF:   - resource "aws_apigatewayv2_deployment" "ws" {
TF:       - api_id        = "vmhre93kmj" -> null
TF:       - auto_deployed = false -> null
TF:       - id            = "puij8o" -> null
TF:       - triggers      = {
TF:           - "redeployment" = "d44da22510de9a5eb7275b61a4beebd4d0cd6b5d"
TF:         } -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/data/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "lp2p3be" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-data/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/deploy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "m4mlmz0" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/destroy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "q12p7pk" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http["/security/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "deqqyp4" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-security/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/data/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "gxekwnm" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-data/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/deploy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "0i47503" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/destroy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "4x2n41f" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.http_proxy["/security/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "http_proxy" {
TF:       - api_id                 = "1d6rczzqu9" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "85yxxl4" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-security/invocations" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {
TF:           - "overwrite:path" = "$request.path.proxy"
TF:         } -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 30000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_integration.ws_handler will be destroyed
TF:   - resource "aws_apigatewayv2_integration" "ws_handler" {
TF:       - api_id                 = "vmhre93kmj" -> null
TF:       - connection_type        = "INTERNET" -> null
TF:       - id                     = "r7155ic" -> null
TF:       - integration_method     = "POST" -> null
TF:       - integration_type       = "AWS_PROXY" -> null
TF:       - integration_uri        = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-ws-handler/invocations" -> null
TF:       - passthrough_behavior   = "WHEN_NO_MATCH" -> null
TF:       - payload_format_version = "1.0" -> null
TF:       - request_parameters     = {} -> null
TF:       - request_templates      = {} -> null
TF:       - timeout_milliseconds   = 29000 -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/data/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "voec4z0" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /data" -> null
TF:       - target               = "integrations/lp2p3be" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/deploy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "5j1w722" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /deploy" -> null
TF:       - target               = "integrations/m4mlmz0" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/destroy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "o0zqx0p" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /destroy" -> null
TF:       - target               = "integrations/q12p7pk" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http["/security/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "qbpxqg8" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /security" -> null
TF:       - target               = "integrations/deqqyp4" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/data/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "8g16iza" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /data/{proxy+}" -> null
TF:       - target               = "integrations/gxekwnm" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/deploy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "0jutnii" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /deploy/{proxy+}" -> null
TF:       - target               = "integrations/0i47503" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/destroy/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "l7o9a6k" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /destroy/{proxy+}" -> null
TF:       - target               = "integrations/4x2n41f" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.http_proxy["/security/POST"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "http_proxy" {
TF:       - api_id               = "1d6rczzqu9" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "qb9xjyj" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "POST /security/{proxy+}" -> null
TF:       - target               = "integrations/85yxxl4" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler["$default"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler" {
TF:       - api_id               = "vmhre93kmj" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "c7n33sa" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$default" -> null
TF:       - target               = "integrations/r7155ic" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler["$disconnect"] will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler" {
TF:       - api_id               = "vmhre93kmj" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "NONE" -> null
TF:       - id                   = "skfzdr0" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$disconnect" -> null
TF:       - target               = "integrations/r7155ic" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_route.ws_handler_connect will be destroyed
TF:   - resource "aws_apigatewayv2_route" "ws_handler_connect" {
TF:       - api_id               = "vmhre93kmj" -> null
TF:       - api_key_required     = false -> null
TF:       - authorization_scopes = [] -> null
TF:       - authorization_type   = "CUSTOM" -> null
TF:       - authorizer_id        = "iv3o85" -> null
TF:       - id                   = "0tci2dn" -> null
TF:       - request_models       = {} -> null
TF:       - route_key            = "$connect" -> null
TF:       - target               = "integrations/r7155ic" -> null
TF:     }
TF:   # module.api.aws_apigatewayv2_stage.http_default will be destroyed
TF:   - resource "aws_apigatewayv2_stage" "http_default" {
TF:       - api_id          = "1d6rczzqu9" -> null
TF:       - arn             = "arn:aws:apigateway:eu-central-1::/apis/1d6rczzqu9/stages/$default" -> null
TF:       - auto_deploy     = false -> null
TF:       - deployment_id   = "1kor1z" -> null
TF:       - execution_arn   = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/$default" -> null
TF:       - id              = "$default" -> null
TF:       - invoke_url      = "https://1d6rczzqu9.execute-api.eu-central-1.amazonaws.com/" -> null
TF:       - name            = "$default" -> null
TF:       - stage_variables = {} -> null
TF:       - tags            = {} -> null
TF:       - tags_all        = {} -> null
TF:       - default_route_settings {
TF:           - data_trace_enabled       = false -> null
TF:           - detailed_metrics_enabled = false -> null
TF:           - throttling_burst_limit   = 0 -> null
TF:           - throttling_rate_limit    = 0 -> null
TF:         }
TF:     }
TF:   # module.api.aws_apigatewayv2_stage.ws_default will be destroyed
TF:   - resource "aws_apigatewayv2_stage" "ws_default" {
TF:       - api_id          = "vmhre93kmj" -> null
TF:       - arn             = "arn:aws:apigateway:eu-central-1::/apis/vmhre93kmj/stages/$default" -> null
TF:       - auto_deploy     = false -> null
TF:       - deployment_id   = "puij8o" -> null
TF:       - execution_arn   = "arn:aws:execute-api:eu-central-1:052548195718:vmhre93kmj/$default" -> null
TF:       - id              = "$default" -> null
TF:       - invoke_url      = "wss://vmhre93kmj.execute-api.eu-central-1.amazonaws.com/$default" -> null
TF:       - name            = "$default" -> null
TF:       - stage_variables = {} -> null
TF:       - tags            = {} -> null
TF:       - tags_all        = {} -> null
TF:       - default_route_settings {
TF:           - data_trace_enabled       = false -> null
TF:           - detailed_metrics_enabled = false -> null
TF:           - logging_level            = "OFF" -> null
TF:           - throttling_burst_limit   = 0 -> null
TF:           - throttling_rate_limit    = 0 -> null
TF:         }
TF:     }
TF:   # module.api.aws_cloudwatch_log_group.authorizer_log_group will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "authorizer_log_group" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-authorizer" -> null
TF:       - id                = "/aws/lambda/mantil-authorizer" -> null
TF:       - name              = "/aws/lambda/mantil-authorizer" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.api.aws_cloudwatch_log_group.sqs_forwarder_log_group will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "sqs_forwarder_log_group" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-sqs-forwarder" -> null
TF:       - id                = "/aws/lambda/mantil-sqs-forwarder" -> null
TF:       - name              = "/aws/lambda/mantil-sqs-forwarder" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.api.aws_cloudwatch_log_group.ws_handler_log_group will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "ws_handler_log_group" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-ws-handler" -> null
TF:       - id                = "/aws/lambda/mantil-ws-handler" -> null
TF:       - name              = "/aws/lambda/mantil-ws-handler" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.api.aws_dynamodb_table.table will be destroyed
TF:   - resource "aws_dynamodb_table" "table" {
TF:       - arn            = "arn:aws:dynamodb:eu-central-1:052548195718:table/mantil-ws-connections" -> null
TF:       - billing_mode   = "PAY_PER_REQUEST" -> null
TF:       - hash_key       = "PK" -> null
TF:       - id             = "mantil-ws-connections" -> null
TF:       - name           = "mantil-ws-connections" -> null
TF:       - range_key      = "SK" -> null
TF:       - read_capacity  = 0 -> null
TF:       - stream_enabled = false -> null
TF:       - tags           = {} -> null
TF:       - tags_all       = {} -> null
TF:       - write_capacity = 0 -> null
TF:       - attribute {
TF:           - name = "PK" -> null
TF:           - type = "S" -> null
TF:         }
TF:       - attribute {
TF:           - name = "SK" -> null
TF:           - type = "S" -> null
TF:         }
TF:       - point_in_time_recovery {
TF:           - enabled = false -> null
TF:         }
TF:       - ttl {
TF:           - enabled = false -> null
TF:         }
TF:     }
TF:   # module.api.aws_iam_role.authorizer[0] will be destroyed
TF:   - resource "aws_iam_role" "authorizer" {
TF:       - arn                   = "arn:aws:iam::052548195718:role/mantil-authorizer" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-10-07T10:58:49Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "mantil-authorizer" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "mantil-authorizer" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {} -> null
TF:       - tags_all              = {} -> null
TF:       - unique_id             = "AROAQYPA52WDDMH3AZ3FU" -> null
TF:       - inline_policy {
TF:           - name   = "mantil-authorizer" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.aws_iam_role.sqs_forwarder will be destroyed
TF:   - resource "aws_iam_role" "sqs_forwarder" {
TF:       - arn                   = "arn:aws:iam::052548195718:role/mantil-ws-sqs-forwarder" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-10-07T10:58:49Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "mantil-ws-sqs-forwarder" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "mantil-ws-sqs-forwarder" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {} -> null
TF:       - tags_all              = {} -> null
TF:       - unique_id             = "AROAQYPA52WDFZ2BWXKWQ" -> null
TF:       - inline_policy {
TF:           - name   = "mantil-ws-sqs-forwarder" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.aws_iam_role.ws_handler will be destroyed
TF:   - resource "aws_iam_role" "ws_handler" {
TF:       - arn                   = "arn:aws:iam::052548195718:role/mantil-ws-handler" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-10-07T10:58:49Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "mantil-ws-handler" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "mantil-ws-handler" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {} -> null
TF:       - tags_all              = {} -> null
TF:       - unique_id             = "AROAQYPA52WDIZI3QWZIV" -> null
TF:       - inline_policy {
TF:           - name   = "mantil-ws-handler" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.api.aws_iam_role_policy.authorizer[0] will be destroyed
TF:   - resource "aws_iam_role_policy" "authorizer" {
TF:       - id     = "mantil-authorizer:mantil-authorizer" -> null
TF:       - name   = "mantil-authorizer" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "mantil-authorizer" -> null
TF:     }
TF:   # module.api.aws_iam_role_policy.sqs_forwarder will be destroyed
TF:   - resource "aws_iam_role_policy" "sqs_forwarder" {
TF:       - id     = "mantil-ws-sqs-forwarder:mantil-ws-sqs-forwarder" -> null
TF:       - name   = "mantil-ws-sqs-forwarder" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "mantil-ws-sqs-forwarder" -> null
TF:     }
TF:   # module.api.aws_iam_role_policy.ws_handler will be destroyed
TF:   - resource "aws_iam_role_policy" "ws_handler" {
TF:       - id     = "mantil-ws-handler:mantil-ws-handler" -> null
TF:       - name   = "mantil-ws-handler" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "mantil-ws-handler" -> null
TF:     }
TF:   # module.api.aws_lambda_event_source_mapping.handler_trigger will be destroyed
TF:   - resource "aws_lambda_event_source_mapping" "handler_trigger" {
TF:       - batch_size                         = 10 -> null
TF:       - bisect_batch_on_function_error     = false -> null
TF:       - enabled                            = true -> null
TF:       - event_source_arn                   = "arn:aws:sqs:eu-central-1:052548195718:mantil-ws-queue.fifo" -> null
TF:       - function_arn                       = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-sqs-forwarder" -> null
TF:       - function_name                      = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-sqs-forwarder" -> null
TF:       - function_response_types            = [] -> null
TF:       - id                                 = "11bf82d8-32fb-43c9-961e-033cc7e3aa7e" -> null
TF:       - last_modified                      = "2021-10-07T10:59:03Z" -> null
TF:       - maximum_batching_window_in_seconds = 0 -> null
TF:       - maximum_record_age_in_seconds      = 0 -> null
TF:       - maximum_retry_attempts             = 0 -> null
TF:       - parallelization_factor             = 0 -> null
TF:       - queues                             = [] -> null
TF:       - state                              = "Enabled" -> null
TF:       - state_transition_reason            = "USER_INITIATED" -> null
TF:       - topics                             = [] -> null
TF:       - tumbling_window_in_seconds         = 0 -> null
TF:       - uuid                               = "11bf82d8-32fb-43c9-961e-033cc7e3aa7e" -> null
TF:     }
TF:   # module.api.aws_lambda_function.authorizer[0] will be destroyed
TF:   - resource "aws_lambda_function" "authorizer" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer" -> null
TF:       - function_name                  = "mantil-authorizer" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-authorizer" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:05.359+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-authorizer" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/authorizer.zip" -> null
TF:       - source_code_hash               = "IU0++Bepv9CA04Bgw69jMB+PWGV2J3FCQzLDfbcmKMs=" -> null
TF:       - source_code_size               = 4519762 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 3 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_PUBLIC_KEY" = "3IOCYqMFmf0HrVGPTXPyMdSqV4ZWlPorvu7V1c_koNU"
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.api.aws_lambda_function.sqs_forwarder will be destroyed
TF:   - resource "aws_lambda_function" "sqs_forwarder" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-sqs-forwarder" -> null
TF:       - function_name                  = "mantil-sqs-forwarder" -> null
TF:       - handler                        = "runtime" -> null
TF:       - id                             = "mantil-sqs-forwarder" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-sqs-forwarder/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:58:57.789+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-sqs-forwarder:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-ws-sqs-forwarder" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/ws-sqs-forwarder.zip" -> null
TF:       - source_code_hash               = "74OaXvGm2rnH5/Jymv1ZnNABXzcNk1viNSWUCmArkJ8=" -> null
TF:       - source_code_size               = 7400572 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 3 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_KV_TABLE_NAME" = "mantil-ws-connections"
TF:               - "MANTIL_PROJECT_NAME"  = ""
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.api.aws_lambda_function.ws_handler will be destroyed
TF:   - resource "aws_lambda_function" "ws_handler" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-ws-handler" -> null
TF:       - function_name                  = "mantil-ws-handler" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-ws-handler" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-ws-handler/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:04.936+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-ws-handler:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-ws-handler" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/ws-handler.zip" -> null
TF:       - source_code_hash               = "y6YBnmMXoKSTEYskYt3Hfwnki4+l1PaG7W9oiCg/JGo=" -> null
TF:       - source_code_size               = 7484657 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 3 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - environment {
TF:           - variables = {
TF:               - "MANTIL_KV_TABLE_NAME" = "mantil-ws-connections"
TF:               - "MANTIL_PROJECT_NAME"  = ""
TF:             } -> null
TF:         }
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.api.aws_lambda_permission.api_gateway_invoke["/data/POST"] will be destroyed
TF:   - resource "aws_lambda_permission" "api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-data" -> null
TF:       - id            = "terraform-20211007105913067800000004" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/*/*" -> null
TF:       - statement_id  = "terraform-20211007105913067800000004" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.api_gateway_invoke["/deploy/POST"] will be destroyed
TF:   - resource "aws_lambda_permission" "api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy" -> null
TF:       - id            = "terraform-20211007105913168500000006" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/*/*" -> null
TF:       - statement_id  = "terraform-20211007105913168500000006" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.api_gateway_invoke["/destroy/POST"] will be destroyed
TF:   - resource "aws_lambda_permission" "api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy" -> null
TF:       - id            = "terraform-20211007105913068500000005" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/*/*" -> null
TF:       - statement_id  = "terraform-20211007105913068500000005" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.api_gateway_invoke["/security/POST"] will be destroyed
TF:   - resource "aws_lambda_permission" "api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-security" -> null
TF:       - id            = "terraform-20211007105912947500000003" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/*/*" -> null
TF:       - statement_id  = "terraform-20211007105912947500000003" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.authorizer_http_api_gateway_invoke[0] will be destroyed
TF:   - resource "aws_lambda_permission" "authorizer_http_api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer" -> null
TF:       - id            = "terraform-20211007105905287900000001" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:1d6rczzqu9/*/*" -> null
TF:       - statement_id  = "terraform-20211007105905287900000001" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.authorizer_ws_api_gateway_invoke[0] will be destroyed
TF:   - resource "aws_lambda_permission" "authorizer_ws_api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-authorizer" -> null
TF:       - id            = "terraform-20211007105905288500000002" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:vmhre93kmj/*/*" -> null
TF:       - statement_id  = "terraform-20211007105905288500000002" -> null
TF:     }
TF:   # module.api.aws_lambda_permission.ws_handler_api_gateway_invoke will be destroyed
TF:   - resource "aws_lambda_permission" "ws_handler_api_gateway_invoke" {
TF:       - action        = "lambda:InvokeFunction" -> null
TF:       - function_name = "mantil-ws-handler" -> null
TF:       - id            = "AllowAPIGatewayInvoke" -> null
TF:       - principal     = "apigateway.amazonaws.com" -> null
TF:       - source_arn    = "arn:aws:execute-api:eu-central-1:052548195718:vmhre93kmj/*/*" -> null
TF:       - statement_id  = "AllowAPIGatewayInvoke" -> null
TF:     }
TF:   # module.api.aws_sqs_queue.queue will be destroyed
TF:   - resource "aws_sqs_queue" "queue" {
TF:       - arn                               = "arn:aws:sqs:eu-central-1:052548195718:mantil-ws-queue.fifo" -> null
TF:       - content_based_deduplication       = true -> null
TF:       - deduplication_scope               = "queue" -> null
TF:       - delay_seconds                     = 0 -> null
TF:       - fifo_queue                        = true -> null
TF:       - fifo_throughput_limit             = "perQueue" -> null
TF:       - id                                = "https://sqs.eu-central-1.amazonaws.com/052548195718/mantil-ws-queue.fifo" -> null
TF:       - kms_data_key_reuse_period_seconds = 300 -> null
TF:       - max_message_size                  = 262144 -> null
TF:       - message_retention_seconds         = 345600 -> null
TF:       - name                              = "mantil-ws-queue.fifo" -> null
TF:       - receive_wait_time_seconds         = 0 -> null
TF:       - tags                              = {} -> null
TF:       - tags_all                          = {} -> null
TF:       - url                               = "https://sqs.eu-central-1.amazonaws.com/052548195718/mantil-ws-queue.fifo" -> null
TF:       - visibility_timeout_seconds        = 3 -> null
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["data"] will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-data" -> null
TF:       - id                = "/aws/lambda/mantil-data" -> null
TF:       - name              = "/aws/lambda/mantil-data" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["deploy"] will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-deploy" -> null
TF:       - id                = "/aws/lambda/mantil-deploy" -> null
TF:       - name              = "/aws/lambda/mantil-deploy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["destroy"] will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-destroy" -> null
TF:       - id                = "/aws/lambda/mantil-destroy" -> null
TF:       - name              = "/aws/lambda/mantil-destroy" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.funcs.aws_cloudwatch_log_group.functions_log_groups["security"] will be destroyed
TF:   - resource "aws_cloudwatch_log_group" "functions_log_groups" {
TF:       - arn               = "arn:aws:logs:eu-central-1:052548195718:log-group:/aws/lambda/mantil-security" -> null
TF:       - id                = "/aws/lambda/mantil-security" -> null
TF:       - name              = "/aws/lambda/mantil-security" -> null
TF:       - retention_in_days = 14 -> null
TF:       - tags              = {} -> null
TF:       - tags_all          = {} -> null
TF:     }
TF:   # module.funcs.aws_iam_instance_profile.lambda will be destroyed
TF:   - resource "aws_iam_instance_profile" "lambda" {
TF:       - arn         = "arn:aws:iam::052548195718:instance-profile/mantil-lambda" -> null
TF:       - create_date = "2021-10-07T10:58:50Z" -> null
TF:       - id          = "mantil-lambda" -> null
TF:       - name        = "mantil-lambda" -> null
TF:       - path        = "/" -> null
TF:       - role        = "mantil-lambda" -> null
TF:       - tags        = {} -> null
TF:       - tags_all    = {} -> null
TF:       - unique_id   = "AIPAQYPA52WDBLCHIQAUA" -> null
TF:     }
TF:   # module.funcs.aws_iam_role.lambda will be destroyed
TF:   - resource "aws_iam_role" "lambda" {
TF:       - arn                   = "arn:aws:iam::052548195718:role/mantil-lambda" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - Service = "lambda.amazonaws.com"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-10-07T10:58:49Z" -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "mantil-lambda" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "mantil-lambda" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {
TF:           - "Name" = "mantil-lambda"
TF:         } -> null
TF:       - tags_all              = {
TF:           - "Name" = "mantil-lambda"
TF:         } -> null
TF:       - unique_id             = "AROAQYPA52WDJQIUQECYA" -> null
TF:       - inline_policy {
TF:           - name   = "mantil-lambda" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.funcs.aws_iam_role_policy.lambda will be destroyed
TF:   - resource "aws_iam_role_policy" "lambda" {
TF:       - id     = "mantil
TF: -lambda:mantil-lambda" -> null
TF:       - name   = "mantil-lambda" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "mantil-lambda" -> null
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["data"] will be destroyed
TF:   - resource "aws_lambda_function" "functions" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-data" -> null
TF:       - function_name                  = "mantil-data" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-data" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-data/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:13.114+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-data:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-lambda" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/data.zip" -> null
TF:       - source_code_hash               = "X8nfxKaxeL//StFM/Q70ThHmefFj6wqtwllar6DBFZs=" -> null
TF:       - source_code_size               = 6987402 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 900 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["deploy"] will be destroyed
TF:   - resource "aws_lambda_function" "functions" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy" -> null
TF:       - function_name                  = "mantil-deploy" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-deploy" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:13.216+0000" -> null
TF:       - layers                         = [
TF:           - "arn:aws:lambda:eu-central-1:553035198032:layer:git-lambda2:8",
TF:           - "arn:aws:lambda:eu-central-1:477361877445:layer:terraform-lambda:1",
TF:         ] -> null
TF:       - memory_size                    = 512 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-deploy:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-lambda" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/deploy.zip" -> null
TF:       - source_code_hash               = "gPVcKHRcTU4uFPbquTHOlqlgTZ0prf1gqobfjExpGBI=" -> null
TF:       - source_code_size               = 11368479 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 900 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["destroy"] will be destroyed
TF:   - resource "aws_lambda_function" "functions" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy" -> null
TF:       - function_name                  = "mantil-destroy" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-destroy" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:13.131+0000" -> null
TF:       - layers                         = [
TF:           - "arn:aws:lambda:eu-central-1:553035198032:layer:git-lambda2:8",
TF:           - "arn:aws:lambda:eu-central-1:477361877445:layer:terraform-lambda:1",
TF:         ] -> null
TF:       - memory_size                    = 512 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-destroy:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-lambda" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/destroy.zip" -> null
TF:       - source_code_hash               = "mnVM80h2UQefI/V3rqCFG6vw4633xBVGpI0pSHisHw8=" -> null
TF:       - source_code_size               = 7223081 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 900 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.funcs.aws_lambda_function.functions["security"] will be destroyed
TF:   - resource "aws_lambda_function" "functions" {
TF:       - architectures                  = [
TF:           - "x86_64",
TF:         ] -> null
TF:       - arn                            = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-security" -> null
TF:       - function_name                  = "mantil-security" -> null
TF:       - handler                        = "bootstrap" -> null
TF:       - id                             = "mantil-security" -> null
TF:       - invoke_arn                     = "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:052548195718:function:mantil-security/invocations" -> null
TF:       - last_modified                  = "2021-10-07T10:59:12.994+0000" -> null
TF:       - layers                         = [] -> null
TF:       - memory_size                    = 128 -> null
TF:       - package_type                   = "Zip" -> null
TF:       - publish                        = false -> null
TF:       - qualified_arn                  = "arn:aws:lambda:eu-central-1:052548195718:function:mantil-security:$LATEST" -> null
TF:       - reserved_concurrent_executions = -1 -> null
TF:       - role                           = "arn:aws:iam::052548195718:role/mantil-lambda" -> null
TF:       - runtime                        = "provided.al2" -> null
TF:       - s3_bucket                      = "mantil-downloads" -> null
TF:       - s3_key                         = "dev/ianic/v0.1.10-31-gf178fee/security.zip" -> null
TF:       - source_code_hash               = "9nGjcic/P4N4GdQM6VGAbZa13ttG337RvdkhGtApBAk=" -> null
TF:       - source_code_size               = 11320060 -> null
TF:       - tags                           = {} -> null
TF:       - tags_all                       = {} -> null
TF:       - timeout                        = 900 -> null
TF:       - version                        = "$LATEST" -> null
TF:       - tracing_config {
TF:           - mode = "PassThrough" -> null
TF:         }
TF:     }
TF:   # module.iam.aws_iam_role.cli_user will be destroyed
TF:   - resource "aws_iam_role" "cli_user" {
TF:       - arn                   = "arn:aws:iam::052548195718:role/mantil-cli-user" -> null
TF:       - assume_role_policy    = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action    = "sts:AssumeRole"
TF:                       - Effect    = "Allow"
TF:                       - Principal = {
TF:                           - AWS = "arn:aws:iam::052548195718:role/mantil-lambda"
TF:                         }
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - create_date           = "2021-10-07T10:58:59Z" -> null
TF:       - description           = "Role that will be used by mantil backend to issue temporary credentials for CLI users." -> null
TF:       - force_detach_policies = false -> null
TF:       - id                    = "mantil-cli-user" -> null
TF:       - managed_policy_arns   = [] -> null
TF:       - max_session_duration  = 3600 -> null
TF:       - name                  = "mantil-cli-user" -> null
TF:       - path                  = "/" -> null
TF:       - tags                  = {} -> null
TF:       - tags_all              = {} -> null
TF:       - unique_id             = "AROAQYPA52WDN73TO6UVV" -> null
TF:       - inline_policy {
TF:           - name   = "mantil-cli-user" -> null
TF:           - policy = jsonencode(
TF:                 {
TF:                   - Statement = [
TF:                       - {
TF:                           - Action   = "*"
TF:                           - Effect   = "Allow"
TF:                           - Resource = "*"
TF:                         },
TF:                     ]
TF:                   - Version   = "2012-10-17"
TF:                 }
TF:             ) -> null
TF:         }
TF:     }
TF:   # module.iam.aws_iam_role_policy.cli_user will be destroyed
TF:   - resource "aws_iam_role_policy" "cli_user" {
TF:       - id     = "mantil-cli-user:mantil-cli-user" -> null
TF:       - name   = "mantil-cli-user" -> null
TF:       - policy = jsonencode(
TF:             {
TF:               - Statement = [
TF:                   - {
TF:                       - Action   = "*"
TF:                       - Effect   = "Allow"
TF:                       - Resource = "*"
TF:                     },
TF:                 ]
TF:               - Version   = "2012-10-17"
TF:             }
TF:         ) -> null
TF:       - role   = "mantil-cli-user" -> null
TF:     }
TF: Plan: 0 to add, 0 to change, 63 to destroy.
TF: ─────────────────────────────────────────────────────────────────────────────
TF: Saved the plan to: tfplan
TF: To perform exactly these actions, run the following command to apply:
TF:     terraform apply "tfplan"
TF: >> terraform apply -no-color -input=false -destroy tfplan
TF: module.api.aws_cloudwatch_log_group.authorizer_log_group: Destroying... [id=/aws/lambda/mantil-authorizer]
TF: module.api.aws_iam_role_policy.authorizer[0]: Destroying... [id=mantil-authorizer:mantil-authorizer]
TF: module.api.aws_apigatewayv2_route.http_proxy["/security/POST"]: Destroying... [id=qb9xjyj]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/data/POST"]: Destroying... [id=terraform-20211007105913067800000004]
TF: module.api.aws_lambda_event_source_mapping.handler_trigger: Destroying... [id=11bf82d8-32fb-43c9-961e-033cc7e3aa7e]
TF: module.api.aws_cloudwatch_log_group.sqs_forwarder_log_group: Destroying... [id=/aws/lambda/mantil-sqs-forwarder]
TF: module.api.aws_apigatewayv2_stage.http_default: Destroying... [id=$default]
TF: module.api.aws_apigatewayv2_stage.ws_default: Destroying... [id=$default]
TF: module.iam.aws_iam_role_policy.cli_user: Destroying... [id=mantil-cli-user:mantil-cli-user]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["security"]: Destroying... [id=/aws/lambda/mantil-security]
TF: module.api.aws_cloudwatch_log_group.authorizer_log_group: Destruction complete after 0s
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["data"]: Destroying... [id=/aws/lambda/mantil-data]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/data/POST"]: Destruction complete after 0s
TF: module.api.aws_cloudwatch_log_group.sqs_forwarder_log_group: Destruction complete after 0s
TF: module.funcs.aws_iam_instance_profile.lambda: Destroying... [id=mantil-lambda]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["security"]: Destruction complete after 0s
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["destroy"]: Destroying... [id=/aws/lambda/mantil-destroy]
TF: module.api.aws_dynamodb_table.table: Destroying... [id=mantil-ws-connections]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["data"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http_proxy["/security/POST"]: Destruction complete after 0s
TF: module.api.aws_lambda_permission.api_gateway_invoke["/destroy/POST"]: Destroying... [id=terraform-20211007105913068500000005]
TF: module.api.aws_lambda_permission.ws_handler_api_gateway_invoke: Destroying... [id=AllowAPIGatewayInvoke]
TF: module.api.aws_lambda_permission.ws_handler_api_gateway_invoke: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_route.http_proxy["/destroy/POST"]: Destroying... [id=l7o9a6k]
TF: module.api.aws_apigatewayv2_stage.http_default: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_stage.ws_default: Destruction complete after 1s
TF: module.api.aws_lambda_permission.api_gateway_invoke["/destroy/POST"]: Destruction complete after 1s
TF: module.funcs.aws_iam_role_policy.lambda: Destroying... [id=mantil-lambda:mantil-lambda]
TF: module.api.aws_iam_role_policy.authorizer[0]: Destruction complete after 1s
TF: module.api.aws_lambda_permission.authorizer_http_api_gateway_invoke[0]: Destroying... [id=terraform-20211007105905287900000001]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["destroy"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_route.http_proxy["/data/POST"]: Destroying... [id=8g16iza]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/deploy/POST"]: Destroying... [id=terraform-20211007105913168500000006]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/security/POST"]: Destroying... [id=terraform-20211007105912947500000003]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/deploy/POST"]: Destruction complete after 0s
TF: module.api.aws_lambda_permission.authorizer_http_api_gateway_invoke[0]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http_proxy["/deploy/POST"]: Destroying... [id=0jutnii]
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["deploy"]: Destroying... [id=/aws/lambda/mantil-deploy]
TF: module.api.aws_lambda_permission.api_gateway_invoke["/security/POST"]: Destruction complete after 0s
TF: module.api.aws_iam_role_policy.ws_handler: Destroying... [id=mantil-ws-handler:mantil-ws-handler]
TF: module.iam.aws_iam_role_policy.cli_user: Destruction complete after 1s
TF: module.api.aws_cloudwatch_log_group.ws_handler_log_group: Destroying... [id=/aws/lambda/mantil-ws-handler]
TF: module.api.aws_apigatewayv2_route.http_proxy["/data/POST"]: Destruction complete after 0s
TF: module.funcs.aws_cloudwatch_log_group.functions_log_groups["deploy"]: Destruction complete after 0s
TF: module.api.aws_lambda_permission.authorizer_ws_api_gateway_invoke[0]: Destroying... [id=terraform-20211007105905288500000002]
TF: module.api.aws_apigatewayv2_route.ws_handler_connect: Destroying... [id=0tci2dn]
TF: module.api.aws_apigatewayv2_route.http_proxy["/destroy/POST"]: Destruction complete after 0s
TF: module.api.aws_iam_role_policy.sqs_forwarder: Destroying... [id=mantil-ws-sqs-forwarder:mantil-ws-sqs-forwarder]
TF: module.api.aws_cloudwatch_log_group.ws_handler_log_group: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_deployment.http: Destroying... [id=1kor1z]
TF: module.api.aws_apigatewayv2_route.http_proxy["/deploy/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_deployment.ws: Destroying... [id=puij8o]
TF: module.api.aws_lambda_permission.authorizer_ws_api_gateway_invoke[0]: Destruction complete after 0s
TF: module.iam.aws_iam_role.cli_user: Destroying... [id=mantil-cli-user]
TF: module.api.aws_apigatewayv2_route.ws_handler_connect: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/deploy/POST"]: Destroying... [id=0i47503]
TF: module.api.aws_apigatewayv2_deployment.http: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/security/POST"]: Destroying... [id=85yxxl4]
TF: module.funcs.aws_iam_role_policy.lambda: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/destroy/POST"]: Destroying... [id=4x2n41f]
TF: module.api.aws_apigatewayv2_deployment.ws: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/deploy/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/data/POST"]: Destroying... [id=gxekwnm]
TF: module.api.aws_apigatewayv2_authorizer.ws[0]: Destroying... [id=iv3o85]
TF: module.api.aws_iam_role_policy.ws_handler: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http["/destroy/POST"]: Destroying... [id=o0zqx0p]
TF: module.api.aws_apigatewayv2_integration.http_proxy["/security/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http["/security/POST"]: Destroying... [id=qbpxqg8]
TF: module.api.aws_iam_role_policy.sqs_forwarder: Destruction complete after 0s
TF: module.funcs.aws_iam_instance_profile.lambda: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/data/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http_proxy["/destroy/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http["/deploy/POST"]: Destroying... [id=5j1w722]
TF: module.api.aws_apigatewayv2_route.ws_handler["$default"]: Destroying... [id=c7n33sa]
TF: module.api.aws_apigatewayv2_route.http["/data/POST"]: Destroying... [id=voec4z0]
TF: module.api.aws_apigatewayv2_route.ws_handler["$disconnect"]: Destroying... [id=skfzdr0]
TF: module.api.aws_apigatewayv2_authorizer.ws[0]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.http["/destroy/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_route.ws_handler["$default"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_route.http["/security/POST"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_route.http["/data/POST"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_route.http["/deploy/POST"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_integration.http["/data/POST"]: Destroying... [id=lp2p3be]
TF: module.api.aws_apigatewayv2_integration.http["/security/POST"]: Destroying... [id=deqqyp4]
TF: module.api.aws_apigatewayv2_authorizer.http[0]: Destroying... [id=168bgc]
TF: module.api.aws_apigatewayv2_integration.http["/deploy/POST"]: Destroying... [id=m4mlmz0]
TF: module.api.aws_apigatewayv2_integration.http["/destroy/POST"]: Destroying... [id=q12p7pk]
TF: module.api.aws_apigatewayv2_route.ws_handler["$disconnect"]: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_integration.ws_handler: Destroying... [id=r7155ic]
TF: module.api.aws_apigatewayv2_integration.http["/data/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http["/deploy/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_integration.http["/security/POST"]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_authorizer.http[0]: Destruction complete after 0s
TF: module.api.aws_lambda_function.authorizer[0]: Destroying... [id=mantil-authorizer]
TF: module.api.aws_apigatewayv2_integration.ws_handler: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_api.ws: Destroying... [id=vmhre93kmj]
TF: module.api.aws_lambda_function.ws_handler: Destroying... [id=mantil-ws-handler]
TF: module.api.aws_apigatewayv2_integration.http["/destroy/POST"]: Destruction complete after 0s
TF: module.funcs.aws_lambda_function.functions["data"]: Destroying... [id=mantil-data]
TF: module.funcs.aws_lambda_function.functions["destroy"]: Destroying... [id=mantil-destroy]
TF: module.funcs.aws_lambda_function.functions["security"]: Destroying... [id=mantil-security]
TF: module.funcs.aws_lambda_function.functions["deploy"]: Destroying... [id=mantil-deploy]
TF: module.api.aws_lambda_function.authorizer[0]: Destruction complete after 0s
TF: module.api.aws_apigatewayv2_api.http: Destroying... [id=1d6rczzqu9]
TF: module.funcs.aws_lambda_function.functions["security"]: Destruction complete after 0s
TF: module.api.aws_iam_role.authorizer[0]: Destroying... [id=mantil-authorizer]
TF: module.funcs.aws_lambda_function.functions["destroy"]: Destruction complete after 0s
TF: module.api.aws_lambda_function.ws_handler: Destruction complete after 0s
TF: module.api.aws_iam_role.ws_handler: Destroying... [id=mantil-ws-handler]
TF: module.funcs.aws_lambda_function.functions["deploy"]: Destruction complete after 0s
TF: module.funcs.aws_lambda_function.functions["data"]: Destruction complete after 0s
TF: module.api.aws_dynamodb_table.table: Destruction complete after 2s
TF: module.iam.aws_iam_role.cli_user: Destruction complete after 1s
TF: module.funcs.aws_iam_role.lambda: Destroying... [id=mantil-lambda]
TF: module.api.aws_apigatewayv2_api.ws: Destruction complete after 1s
TF: module.api.aws_iam_role.authorizer[0]: Destruction complete after 1s
TF: module.api.aws_iam_role.ws_handler: Destruction complete after 1s
TF: module.api.aws_apigatewayv2_api.http: Destruction complete after 1s
TF: module.funcs.aws_iam_role.lambda: Destruction complete after 1s
TF: module.api.aws_lambda_event_source_mapping.handler_trigger: Still destroying... [id=11bf82d8-32fb-43c9-961e-033cc7e3aa7e, 10s elapsed]
TF: module.api.aws_lambda_event_source_mapping.handler_trigger: Still destroying... [id=11bf82d8-32fb-43c9-961e-033cc7e3aa7e, 20s elapsed]
TF: module.api.aws_lambda_event_source_mapping.handler_trigger: Destruction complete after 24s
TF: module.api.aws_sqs_queue.queue: Destroying... [id=https://sqs.eu-central-1.amazonaws.com/052548195718/mantil-ws-queue.fifo]
TF: module.api.aws_sqs_queue.queue: Destruction complete after 0s
TF: module.api.aws_lambda_function.sqs_forwarder: Destroying... [id=mantil-sqs-forwarder]
TF: module.api.aws_lambda_function.sqs_forwarder: Destruction complete after 1s
TF: module.api.aws_iam_role.sqs_forwarder: Destroying... [id=mantil-ws-sqs-forwarder]
TF: module.api.aws_iam_role.sqs_forwarder: Destruction complete after 1s
TF: Apply complete! Resources: 0 added, 0 changed, 63 destroyed.
